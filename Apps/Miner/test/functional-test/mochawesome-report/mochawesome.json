{
  "stats": {
    "suites": 1,
    "tests": 27,
    "passes": 19,
    "pending": 0,
    "failures": 8,
    "start": "2018-06-02T06:29:23.127Z",
    "end": "2018-06-02T06:29:40.720Z",
    "duration": 17593,
    "testsRegistered": 27,
    "passPercent": 70.4,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "warning",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "uuid": "ce676d6b-7ee6-4329-aef4-898b115933b4",
    "title": "",
    "fullFile": "",
    "file": "",
    "beforeHooks": [],
    "afterHooks": [],
    "tests": [],
    "suites": [
      {
        "uuid": "d05bd31e-0497-4d4b-b941-07521f9c41f9",
        "title": "General functional tests",
        "fullFile": "C:\\Development\\NodeJS\\EncryptionNodeJS\\Apps\\Miner\\test\\functional-test\\generalTestBinary.js",
        "file": "\\generalTestBinary.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook",
            "fullTitle": "General functional tests \"before all\" hook",
            "timedOut": false,
            "duration": 1,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "modFs.readdirSync('./units/').forEach(file => {\n    modFs.unlinkSync(`./units/${file}`);\n});",
            "err": {},
            "isRoot": false,
            "uuid": "7f532c4e-e68a-46eb-b0e0-222d7a732ab4",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [],
        "tests": [
          {
            "title": "Check is operator Valid",
            "fullTitle": "General functional tests Check is operator Valid",
            "timedOut": false,
            "duration": 704,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var operatorExecutor = child_process.execFileSync(operatorApp,[\"-ver\"], {stdio: ['pipe', 'pipe', 'pipe']});\nvar data = operatorExecutor.toString();\nif (data.length === 0) {\n    throw new Error(\"Operator application is not valid\");\n}",
            "err": {},
            "isRoot": false,
            "uuid": "b3d94d45-a8f1-4ce4-83a7-a13f5b8a7879",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Check properly executon of -ver",
            "fullTitle": "General functional tests Check properly executon of -ver",
            "timedOut": false,
            "duration": 675,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": "[\n  {\n    \"title\": \"Test specific values\",\n    \"value\": \"{\\\"args\\\":[\\\"-ver\\\"],\\\"expected\\\":\\\"Copyright (c) 2018, Mihail Maldzhanski <pollarize@gmail.com>\\\\nDICE Money <www.dice.money> - Miner Application Version[1.48] - 30.05.2018\\\",\\\"unExpected\\\":\\\"Err\\\"}\"\n  },\n  {\n    \"title\": \"Execution report\",\n    \"value\": \"Copyright (c) 2018, Mihail Maldzhanski <pollarize@gmail.com>\\nDICE Money <www.dice.money> - Miner Application Version[1.48] - 30.05.2018\\n\"\n  }\n]",
            "code": "//Add test case variables\naddContext(this, {title: \"Test specific values\", value: JSON.stringify(test)});\n//Set user defined timeout\nthis.timeout(maxTimeOut);\n//Exec node\nvar minerAppExecVersion = child_process.execFileSync(minerApp, [ ...test.args], {stdio: ['pipe', 'pipe', 'pipe'],cwd:\"./\"});\nvar data = minerAppExecVersion.toString();\n//Add return data from execution\naddContext(this, {title: \"Execution report\", value: data});\n//Real tests\nif (test.expected !== '' && data.indexOf(test.expected) === -1) {\n    throw new Error(\"Expected: \" + test.expected);\n}\nif (test.unExpected !== '' && data.indexOf(test.unExpected) !== -1) {\n    throw new Error(\"Unxpected: \" + test.unExpected);\n}\nif (test.specificExec(data) !== true) {\n    throw new Error(`Specific execution failed on ${test.args[0]} with ${\"\\n\" + data}`);\n}",
            "err": {},
            "isRoot": false,
            "uuid": "a141becb-9914-457d-9bcf-00276ce4f645",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Check properly executon of -h",
            "fullTitle": "General functional tests Check properly executon of -h",
            "timedOut": false,
            "duration": 577,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": "[\n  {\n    \"title\": \"Test specific values\",\n    \"value\": \"{\\\"args\\\":[\\\"-h\\\"],\\\"expected\\\":\\\"Copyright (c) 2018, Mihail Maldzhanski <pollarize@gmail.com>\\\\nDICE Money <www.dice.money> - Miner Application Version[1.48] - 30.05.2018\\\",\\\"unExpected\\\":\\\"Err\\\"}\"\n  },\n  {\n    \"title\": \"Execution report\",\n    \"value\": \"\\nCopyright (c) 2018, Mihail Maldzhanski <pollarize@gmail.com>\\nDICE Money <www.dice.money> - Miner Application Version[1.48] - 30.05.2018\\n\\n  -cCfg,--createConfiguration\\n     Create Configuration of the current owner.\\n     Usage: <application> <-cCfg or --createConfiguration> <nameOfOwner> <keyPair> <configurationFile>\\n\\n  -uCfg,--updateConfiguration\\n     Update Configuration of the current owner.(Do not delete existing contacts and operators!)\\n     Usage: <application> <-uCfg or --updateConfiguration> <nameOfOwner> <keyPair> <configurationFile>\\n\\n  -iCfg,--importConfiguration\\n     Import external configration file.\\n     Usage: <application> <-iCfg or --importConfiguration> <externalConfigurationFile> <configurationFile>\\n\\n  -aC,--addContact\\n     Add new Contact in configuration file.\\n     Usage: <application> <-aC or --addContact> <nameOfContact> <digitalAddrOfContact> <configurationFile>\\n\\n  -aO,--addOperator\\n     Add new Operator in configration file.\\n     Usage: <application> <-aO or --addOperator> <nameOfOperator> <digitalAddrOfOperator> <configurationFile>\\n\\n  -eAc,--exportAllContacts\\n     Export all Contacts from local configuration file.\\n     Usage: <application> <-eAc or --exportAllContacts> <externalConfigurationFile> <configurationFile>\\n\\n  -eAo,--exportAllOperators\\n     Export all Operators from local configration file.\\n     Usage: <application> <-eAo or --exportAllOperators> <externalConfigurationFile> <configurationFile>\\n\\n  -lO,--listOperators\\n     List all Operators in confgiration file.\\n     Usage: <application> <-lO or --listOperators> <configurationFile>\\n\\n  -lC,--listContacts\\n     List all Contacts in confgiration file.\\n     Usage: <application> <-lC or --listContacts> <configurationFile>\\n\\n  -eK,--exportKeys\\n     Export keys saved in configuration file.\\n     Usage: <application> <-eK or --exportKeys> <fileOutput> <configurationFile>\\n\\n  -pD,--printDigitalAddress\\n     Print Digital Address from configuration file.\\n     Usage: <application> <-pD or --printDigitalAddress> <configurationFile>\\n\\n  -pN,--printName\\n     Print Name from configuration file.\\n     Usage: <application> <-pN or --printName> <configurationFile>\\n\\n  -lGO,--listGlobalOperators\\n     List all Global Operators.\\n     Usage: <application> <-lGO or --listGlobalOperators> <>\\n\\n  -uDns,--updateDnsBinder\\n     Downaload latest version of dns binder file.\\n     Usage: <application> <-uDns or --updateDnsBinder> <>\\n\\n  -b,--balance\\n     Calculate current balance of DICE in specified folder.\\n     Usage: <application> <-b or --balance> <folderWithUnits> <keyPair>\\n\\n  -lU,--listUnits\\n     List all units in specific folder with current value, owner and operator.\\n     Usage: <application> <-lU or --listUnits> <folderWithUnits> <keyPair>\\n\\n  -v,--validate\\n     Exports content from Base58 saved unit and value of the unit\\n     Usage: <application> <-v or --validate> <diceUnit> <keyPair>\\n\\n  -k,--keygen\\n     Generate new KeyPair of Digital Address and Private Key\\n     Usage: <application> <-k or --keygen> <fileOutput>\\n\\n  -to,--tradeOwnerless\\n     Trade ownerless dice unit\\n     Usage: <application> <-to or --tradeOwnerless> <diceUnit> <keyPair>\\n\\n  -tc,--tradeCurrent\\n     Trade current owner of unit \\n     Usage: <application> <-tc or --tradeCurrent> <diceUnit> <fileOutput> <addrMin> <keyPair>\\n\\n  -tn,--tradeNew\\n     Trade request from new owner (for ownerless unit or traded unit)\\n     Usage: <application> <-tn or --tradeNew> <diceUnit> <fileOutput> <keyPair>\\n\\n  -cc,--calculateCuda\\n     Calculate new DICE Unit by using CUDA accelerated application\\n     Usage: <application> <-cc or --calculateCuda> <fileOutput> <addrOp> <specificUnitValue> <keyPair>\\n\\n  -r,--register\\n     Send prototype to operator to register it in its DB.\\n     Usage: <application> <-r or --register> <diceUnit> <keyPair>\\n\\n  -ver,--version\\n     Prints application current version\\n     Usage: <application> <-ver or --version> <>\\n\\n  -h,--help\\n     Print Following list\\n     Usage: <application> <-h or --help> <>\\n\\n\\n\"\n  }\n]",
            "code": "//Add test case variables\naddContext(this, {title: \"Test specific values\", value: JSON.stringify(test)});\n//Set user defined timeout\nthis.timeout(maxTimeOut);\n//Exec node\nvar minerAppExecVersion = child_process.execFileSync(minerApp, [ ...test.args], {stdio: ['pipe', 'pipe', 'pipe'],cwd:\"./\"});\nvar data = minerAppExecVersion.toString();\n//Add return data from execution\naddContext(this, {title: \"Execution report\", value: data});\n//Real tests\nif (test.expected !== '' && data.indexOf(test.expected) === -1) {\n    throw new Error(\"Expected: \" + test.expected);\n}\nif (test.unExpected !== '' && data.indexOf(test.unExpected) !== -1) {\n    throw new Error(\"Unxpected: \" + test.unExpected);\n}\nif (test.specificExec(data) !== true) {\n    throw new Error(`Specific execution failed on ${test.args[0]} with ${\"\\n\" + data}`);\n}",
            "err": {},
            "isRoot": false,
            "uuid": "e6cc703f-2368-4f89-9dbc-62d796737639",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Check properly executon of -uDns",
            "fullTitle": "General functional tests Check properly executon of -uDns",
            "timedOut": false,
            "duration": 1413,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": "[\n  {\n    \"title\": \"Test specific values\",\n    \"value\": \"{\\\"args\\\":[\\\"-uDns\\\"],\\\"expected\\\":\\\"UsInf0089\\\",\\\"unExpected\\\":\\\"Err\\\"}\"\n  },\n  {\n    \"title\": \"Execution report\",\n    \"value\": \"UsInf0089\\nUsInf0054\\n\"\n  }\n]",
            "code": "//Add test case variables\naddContext(this, {title: \"Test specific values\", value: JSON.stringify(test)});\n//Set user defined timeout\nthis.timeout(maxTimeOut);\n//Exec node\nvar minerAppExecVersion = child_process.execFileSync(minerApp, [ ...test.args], {stdio: ['pipe', 'pipe', 'pipe'],cwd:\"./\"});\nvar data = minerAppExecVersion.toString();\n//Add return data from execution\naddContext(this, {title: \"Execution report\", value: data});\n//Real tests\nif (test.expected !== '' && data.indexOf(test.expected) === -1) {\n    throw new Error(\"Expected: \" + test.expected);\n}\nif (test.unExpected !== '' && data.indexOf(test.unExpected) !== -1) {\n    throw new Error(\"Unxpected: \" + test.unExpected);\n}\nif (test.specificExec(data) !== true) {\n    throw new Error(`Specific execution failed on ${test.args[0]} with ${\"\\n\" + data}`);\n}",
            "err": {},
            "isRoot": false,
            "uuid": "39f274fd-8502-4c5e-adcf-1dbfdfa5c1d1",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Check properly executon of -lGO",
            "fullTitle": "General functional tests Check properly executon of -lGO",
            "timedOut": false,
            "duration": 629,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": "[\n  {\n    \"title\": \"Test specific values\",\n    \"value\": \"{\\\"args\\\":[\\\"-lGO\\\"],\\\"expected\\\":\\\"UsInf0054\\\",\\\"unExpected\\\":\\\"Err\\\"}\"\n  },\n  {\n    \"title\": \"Execution report\",\n    \"value\": \"1. d8f54-4fe68-98060-78b6d-bbbf3-1908b-473de-ed2b2 - Orange Pi Zero - Allwinner H2+ - 256MB RAM - 4GB ROM\\n2. 11f18-19ec1-b4e42-c96de-906fc-86fd6-d64e4-ed409 - Neo Pi Neo Plus 2 - Allwinner H5(64 bit) - 1024MB RAM - 8GB ROM - Sofia\\n3. 58b4b-cfd09-290eb-0ad2f-c6077-c2f0d-fa940-0f4d4 - Neo Pi Neo Plus 2 - Allwinner H5(64 bit) - 1024MB RAM - 8GB ROM - London\\n4. 76640-bcfe5-47604-75a2e-c0a6c-90df2-c39ef-97718 - undefined\\nUsInf0054\\n\"\n  }\n]",
            "code": "//Add test case variables\naddContext(this, {title: \"Test specific values\", value: JSON.stringify(test)});\n//Set user defined timeout\nthis.timeout(maxTimeOut);\n//Exec node\nvar minerAppExecVersion = child_process.execFileSync(minerApp, [ ...test.args], {stdio: ['pipe', 'pipe', 'pipe'],cwd:\"./\"});\nvar data = minerAppExecVersion.toString();\n//Add return data from execution\naddContext(this, {title: \"Execution report\", value: data});\n//Real tests\nif (test.expected !== '' && data.indexOf(test.expected) === -1) {\n    throw new Error(\"Expected: \" + test.expected);\n}\nif (test.unExpected !== '' && data.indexOf(test.unExpected) !== -1) {\n    throw new Error(\"Unxpected: \" + test.unExpected);\n}\nif (test.specificExec(data) !== true) {\n    throw new Error(`Specific execution failed on ${test.args[0]} with ${\"\\n\" + data}`);\n}",
            "err": {},
            "isRoot": false,
            "uuid": "e63abbaa-7989-4c7d-a1bf-963a96ac98f9",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Check properly executon of -k",
            "fullTitle": "General functional tests Check properly executon of -k",
            "timedOut": false,
            "duration": 659,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": "[\n  {\n    \"title\": \"Test specific values\",\n    \"value\": \"{\\\"args\\\":[\\\"-k\\\",\\\"testKey\\\"],\\\"expected\\\":\\\"UsInf0053\\\",\\\"unExpected\\\":\\\"Err\\\"}\"\n  },\n  {\n    \"title\": \"Execution report\",\n    \"value\": \"UsInf0053\\nUsInf0059  :  3CweDhRocivXPJu5nUn5vAbFqrhB\\nUsInf0060  :  c6091-87570-1bdf9-ed6a8-653fd-e931e-89d34-e3724\\n\"\n  }\n]",
            "code": "//Add test case variables\naddContext(this, {title: \"Test specific values\", value: JSON.stringify(test)});\n//Set user defined timeout\nthis.timeout(maxTimeOut);\n//Exec node\nvar minerAppExecVersion = child_process.execFileSync(minerApp, [ ...test.args], {stdio: ['pipe', 'pipe', 'pipe'],cwd:\"./\"});\nvar data = minerAppExecVersion.toString();\n//Add return data from execution\naddContext(this, {title: \"Execution report\", value: data});\n//Real tests\nif (test.expected !== '' && data.indexOf(test.expected) === -1) {\n    throw new Error(\"Expected: \" + test.expected);\n}\nif (test.unExpected !== '' && data.indexOf(test.unExpected) !== -1) {\n    throw new Error(\"Unxpected: \" + test.unExpected);\n}\nif (test.specificExec(data) !== true) {\n    throw new Error(`Specific execution failed on ${test.args[0]} with ${\"\\n\" + data}`);\n}",
            "err": {},
            "isRoot": false,
            "uuid": "e601d7f8-c2e9-4c85-8967-7b2764127edd",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Check properly executon of -cCfg",
            "fullTitle": "General functional tests Check properly executon of -cCfg",
            "timedOut": false,
            "duration": 564,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": "[\n  {\n    \"title\": \"Test specific values\",\n    \"value\": \"{\\\"args\\\":[\\\"-cCfg\\\",\\\"Mihail Maldzhanski\\\",\\\"testkey.dkeys\\\",\\\"testCfg\\\"],\\\"expected\\\":\\\"\\\",\\\"unExpected\\\":\\\"Err\\\"}\"\n  },\n  {\n    \"title\": \"Execution report\",\n    \"value\": \"\"\n  }\n]",
            "code": "//Add test case variables\naddContext(this, {title: \"Test specific values\", value: JSON.stringify(test)});\n//Set user defined timeout\nthis.timeout(maxTimeOut);\n//Exec node\nvar minerAppExecVersion = child_process.execFileSync(minerApp, [ ...test.args], {stdio: ['pipe', 'pipe', 'pipe'],cwd:\"./\"});\nvar data = minerAppExecVersion.toString();\n//Add return data from execution\naddContext(this, {title: \"Execution report\", value: data});\n//Real tests\nif (test.expected !== '' && data.indexOf(test.expected) === -1) {\n    throw new Error(\"Expected: \" + test.expected);\n}\nif (test.unExpected !== '' && data.indexOf(test.unExpected) !== -1) {\n    throw new Error(\"Unxpected: \" + test.unExpected);\n}\nif (test.specificExec(data) !== true) {\n    throw new Error(`Specific execution failed on ${test.args[0]} with ${\"\\n\" + data}`);\n}",
            "err": {},
            "isRoot": false,
            "uuid": "f8a2bb0d-fb0a-4def-934d-0c3278227155",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Check properly executon of -uCfg",
            "fullTitle": "General functional tests Check properly executon of -uCfg",
            "timedOut": false,
            "duration": 615,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": "[\n  {\n    \"title\": \"Test specific values\",\n    \"value\": \"{\\\"args\\\":[\\\"-uCfg\\\",\\\"Mihail Maldzhanski New\\\",\\\"testkey.dkeys\\\",\\\"testCfg\\\"],\\\"expected\\\":\\\"\\\",\\\"unExpected\\\":\\\"Err\\\"}\"\n  },\n  {\n    \"title\": \"Execution report\",\n    \"value\": \"\"\n  }\n]",
            "code": "//Add test case variables\naddContext(this, {title: \"Test specific values\", value: JSON.stringify(test)});\n//Set user defined timeout\nthis.timeout(maxTimeOut);\n//Exec node\nvar minerAppExecVersion = child_process.execFileSync(minerApp, [ ...test.args], {stdio: ['pipe', 'pipe', 'pipe'],cwd:\"./\"});\nvar data = minerAppExecVersion.toString();\n//Add return data from execution\naddContext(this, {title: \"Execution report\", value: data});\n//Real tests\nif (test.expected !== '' && data.indexOf(test.expected) === -1) {\n    throw new Error(\"Expected: \" + test.expected);\n}\nif (test.unExpected !== '' && data.indexOf(test.unExpected) !== -1) {\n    throw new Error(\"Unxpected: \" + test.unExpected);\n}\nif (test.specificExec(data) !== true) {\n    throw new Error(`Specific execution failed on ${test.args[0]} with ${\"\\n\" + data}`);\n}",
            "err": {},
            "isRoot": false,
            "uuid": "4e3b2e01-d3f4-470f-b1cb-fcdc81272cae",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Check properly executon of -iCfg",
            "fullTitle": "General functional tests Check properly executon of -iCfg",
            "timedOut": false,
            "duration": 581,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": "[\n  {\n    \"title\": \"Test specific values\",\n    \"value\": \"{\\\"args\\\":[\\\"-iCfg\\\",\\\"../../contactsInit.dbook\\\",\\\"defaultConfig.dconf\\\"],\\\"expected\\\":\\\"\\\",\\\"unExpected\\\":\\\"Err\\\"}\"\n  },\n  {\n    \"title\": \"Execution report\",\n    \"value\": \"\"\n  }\n]",
            "code": "//Add test case variables\naddContext(this, {title: \"Test specific values\", value: JSON.stringify(test)});\n//Set user defined timeout\nthis.timeout(maxTimeOut);\n//Exec node\nvar minerAppExecVersion = child_process.execFileSync(minerApp, [ ...test.args], {stdio: ['pipe', 'pipe', 'pipe'],cwd:\"./\"});\nvar data = minerAppExecVersion.toString();\n//Add return data from execution\naddContext(this, {title: \"Execution report\", value: data});\n//Real tests\nif (test.expected !== '' && data.indexOf(test.expected) === -1) {\n    throw new Error(\"Expected: \" + test.expected);\n}\nif (test.unExpected !== '' && data.indexOf(test.unExpected) !== -1) {\n    throw new Error(\"Unxpected: \" + test.unExpected);\n}\nif (test.specificExec(data) !== true) {\n    throw new Error(`Specific execution failed on ${test.args[0]} with ${\"\\n\" + data}`);\n}",
            "err": {},
            "isRoot": false,
            "uuid": "5fdf4dd9-645d-4b0e-848b-d76e5ed48f1d",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Check properly executon of -aC",
            "fullTitle": "General functional tests Check properly executon of -aC",
            "timedOut": false,
            "duration": 597,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": "[\n  {\n    \"title\": \"Test specific values\",\n    \"value\": \"{\\\"args\\\":[\\\"-aC\\\",\\\"Tester Name\\\",\\\"3f2b9-2f458-f2066-26c65-ea67c-a6b48-86ced-e9dc6\\\",\\\"defaultConfig.dconf\\\"],\\\"expected\\\":\\\"\\\",\\\"unExpected\\\":\\\"Err\\\"}\"\n  },\n  {\n    \"title\": \"Execution report\",\n    \"value\": \"\"\n  }\n]",
            "code": "//Add test case variables\naddContext(this, {title: \"Test specific values\", value: JSON.stringify(test)});\n//Set user defined timeout\nthis.timeout(maxTimeOut);\n//Exec node\nvar minerAppExecVersion = child_process.execFileSync(minerApp, [ ...test.args], {stdio: ['pipe', 'pipe', 'pipe'],cwd:\"./\"});\nvar data = minerAppExecVersion.toString();\n//Add return data from execution\naddContext(this, {title: \"Execution report\", value: data});\n//Real tests\nif (test.expected !== '' && data.indexOf(test.expected) === -1) {\n    throw new Error(\"Expected: \" + test.expected);\n}\nif (test.unExpected !== '' && data.indexOf(test.unExpected) !== -1) {\n    throw new Error(\"Unxpected: \" + test.unExpected);\n}\nif (test.specificExec(data) !== true) {\n    throw new Error(`Specific execution failed on ${test.args[0]} with ${\"\\n\" + data}`);\n}",
            "err": {},
            "isRoot": false,
            "uuid": "055c47a8-8c78-4a93-ad74-021bf5f7caf1",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Check properly executon of -aO",
            "fullTitle": "General functional tests Check properly executon of -aO",
            "timedOut": false,
            "duration": 566,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": "[\n  {\n    \"title\": \"Test specific values\",\n    \"value\": \"{\\\"args\\\":[\\\"-aO\\\",\\\"Tester Operator\\\",\\\"3f2b9-2f458-f2066-26c65-ea67c-a6b48-86ced-e9dc6\\\",\\\"defaultConfig.dconf\\\"],\\\"expected\\\":\\\"\\\",\\\"unExpected\\\":\\\"Err\\\"}\"\n  },\n  {\n    \"title\": \"Execution report\",\n    \"value\": \"\"\n  }\n]",
            "code": "//Add test case variables\naddContext(this, {title: \"Test specific values\", value: JSON.stringify(test)});\n//Set user defined timeout\nthis.timeout(maxTimeOut);\n//Exec node\nvar minerAppExecVersion = child_process.execFileSync(minerApp, [ ...test.args], {stdio: ['pipe', 'pipe', 'pipe'],cwd:\"./\"});\nvar data = minerAppExecVersion.toString();\n//Add return data from execution\naddContext(this, {title: \"Execution report\", value: data});\n//Real tests\nif (test.expected !== '' && data.indexOf(test.expected) === -1) {\n    throw new Error(\"Expected: \" + test.expected);\n}\nif (test.unExpected !== '' && data.indexOf(test.unExpected) !== -1) {\n    throw new Error(\"Unxpected: \" + test.unExpected);\n}\nif (test.specificExec(data) !== true) {\n    throw new Error(`Specific execution failed on ${test.args[0]} with ${\"\\n\" + data}`);\n}",
            "err": {},
            "isRoot": false,
            "uuid": "1c428838-79b5-4485-a6ee-1cc55d080b2a",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Check properly executon of -lO",
            "fullTitle": "General functional tests Check properly executon of -lO",
            "timedOut": false,
            "duration": 565,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": "[\n  {\n    \"title\": \"Test specific values\",\n    \"value\": \"{\\\"args\\\":[\\\"-lO\\\",\\\"defaultConfig.dconf\\\"],\\\"expected\\\":\\\"\\\",\\\"unExpected\\\":\\\"Err\\\"}\"\n  },\n  {\n    \"title\": \"Execution report\",\n    \"value\": \"Name: OpiZero Digital Address: d8f54-4fe68-98060-78b6d-bbbf3-1908b-473de-ed2b2 \\nName: NeoPiPlus2 Digital Address: 11f18-19ec1-b4e42-c96de-906fc-86fd6-d64e4-ed409 \\nName: Tester Operator Digital Address: 3f2b9-2f458-f2066-26c65-ea67c-a6b48-86ced-e9dc6 \\n\\n\"\n  }\n]",
            "code": "//Add test case variables\naddContext(this, {title: \"Test specific values\", value: JSON.stringify(test)});\n//Set user defined timeout\nthis.timeout(maxTimeOut);\n//Exec node\nvar minerAppExecVersion = child_process.execFileSync(minerApp, [ ...test.args], {stdio: ['pipe', 'pipe', 'pipe'],cwd:\"./\"});\nvar data = minerAppExecVersion.toString();\n//Add return data from execution\naddContext(this, {title: \"Execution report\", value: data});\n//Real tests\nif (test.expected !== '' && data.indexOf(test.expected) === -1) {\n    throw new Error(\"Expected: \" + test.expected);\n}\nif (test.unExpected !== '' && data.indexOf(test.unExpected) !== -1) {\n    throw new Error(\"Unxpected: \" + test.unExpected);\n}\nif (test.specificExec(data) !== true) {\n    throw new Error(`Specific execution failed on ${test.args[0]} with ${\"\\n\" + data}`);\n}",
            "err": {},
            "isRoot": false,
            "uuid": "6281bc05-d12c-44ef-b329-443a5af2aa13",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Check properly executon of -lC",
            "fullTitle": "General functional tests Check properly executon of -lC",
            "timedOut": false,
            "duration": 564,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": "[\n  {\n    \"title\": \"Test specific values\",\n    \"value\": \"{\\\"args\\\":[\\\"-lC\\\",\\\"defaultConfig.dconf\\\"],\\\"expected\\\":\\\"\\\",\\\"unExpected\\\":\\\"Err\\\"}\"\n  },\n  {\n    \"title\": \"Execution report\",\n    \"value\": \"Name: Mihail Maldzhanski Digital Address: f87b0-31850-b97f9-835c9-9cb13-f91ce-43832-8537c \\nName: Tester Name Digital Address: 3f2b9-2f458-f2066-26c65-ea67c-a6b48-86ced-e9dc6 \\n\\n\"\n  }\n]",
            "code": "//Add test case variables\naddContext(this, {title: \"Test specific values\", value: JSON.stringify(test)});\n//Set user defined timeout\nthis.timeout(maxTimeOut);\n//Exec node\nvar minerAppExecVersion = child_process.execFileSync(minerApp, [ ...test.args], {stdio: ['pipe', 'pipe', 'pipe'],cwd:\"./\"});\nvar data = minerAppExecVersion.toString();\n//Add return data from execution\naddContext(this, {title: \"Execution report\", value: data});\n//Real tests\nif (test.expected !== '' && data.indexOf(test.expected) === -1) {\n    throw new Error(\"Expected: \" + test.expected);\n}\nif (test.unExpected !== '' && data.indexOf(test.unExpected) !== -1) {\n    throw new Error(\"Unxpected: \" + test.unExpected);\n}\nif (test.specificExec(data) !== true) {\n    throw new Error(`Specific execution failed on ${test.args[0]} with ${\"\\n\" + data}`);\n}",
            "err": {},
            "isRoot": false,
            "uuid": "dcc64f6d-3ada-4c24-86e7-5192dd6cc978",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Check properly executon of -pN",
            "fullTitle": "General functional tests Check properly executon of -pN",
            "timedOut": false,
            "duration": 566,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": "[\n  {\n    \"title\": \"Test specific values\",\n    \"value\": \"{\\\"args\\\":[\\\"-pN\\\",\\\"defaultConfig.dconf\\\"],\\\"expected\\\":\\\"\\\",\\\"unExpected\\\":\\\"Err\\\"}\"\n  },\n  {\n    \"title\": \"Execution report\",\n    \"value\": \"Mihail Maldzhanski New\\n\"\n  }\n]",
            "code": "//Add test case variables\naddContext(this, {title: \"Test specific values\", value: JSON.stringify(test)});\n//Set user defined timeout\nthis.timeout(maxTimeOut);\n//Exec node\nvar minerAppExecVersion = child_process.execFileSync(minerApp, [ ...test.args], {stdio: ['pipe', 'pipe', 'pipe'],cwd:\"./\"});\nvar data = minerAppExecVersion.toString();\n//Add return data from execution\naddContext(this, {title: \"Execution report\", value: data});\n//Real tests\nif (test.expected !== '' && data.indexOf(test.expected) === -1) {\n    throw new Error(\"Expected: \" + test.expected);\n}\nif (test.unExpected !== '' && data.indexOf(test.unExpected) !== -1) {\n    throw new Error(\"Unxpected: \" + test.unExpected);\n}\nif (test.specificExec(data) !== true) {\n    throw new Error(`Specific execution failed on ${test.args[0]} with ${\"\\n\" + data}`);\n}",
            "err": {},
            "isRoot": false,
            "uuid": "31707886-ab25-4b43-8c76-cce17016d4fe",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Check properly executon of -pD",
            "fullTitle": "General functional tests Check properly executon of -pD",
            "timedOut": false,
            "duration": 588,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": "[\n  {\n    \"title\": \"Test specific values\",\n    \"value\": \"{\\\"args\\\":[\\\"-pD\\\",\\\"defaultConfig.dconf\\\"],\\\"expected\\\":\\\"\\\",\\\"unExpected\\\":\\\"Err\\\"}\"\n  },\n  {\n    \"title\": \"Execution report\",\n    \"value\": \"c6091-87570-1bdf9-ed6a8-653fd-e931e-89d34-e3724\\n\"\n  }\n]",
            "code": "//Add test case variables\naddContext(this, {title: \"Test specific values\", value: JSON.stringify(test)});\n//Set user defined timeout\nthis.timeout(maxTimeOut);\n//Exec node\nvar minerAppExecVersion = child_process.execFileSync(minerApp, [ ...test.args], {stdio: ['pipe', 'pipe', 'pipe'],cwd:\"./\"});\nvar data = minerAppExecVersion.toString();\n//Add return data from execution\naddContext(this, {title: \"Execution report\", value: data});\n//Real tests\nif (test.expected !== '' && data.indexOf(test.expected) === -1) {\n    throw new Error(\"Expected: \" + test.expected);\n}\nif (test.unExpected !== '' && data.indexOf(test.unExpected) !== -1) {\n    throw new Error(\"Unxpected: \" + test.unExpected);\n}\nif (test.specificExec(data) !== true) {\n    throw new Error(`Specific execution failed on ${test.args[0]} with ${\"\\n\" + data}`);\n}",
            "err": {},
            "isRoot": false,
            "uuid": "d587d9ef-80f8-4202-bdd8-84d781d95dc6",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Check properly executon of -eAc",
            "fullTitle": "General functional tests Check properly executon of -eAc",
            "timedOut": false,
            "duration": 567,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": "[\n  {\n    \"title\": \"Test specific values\",\n    \"value\": \"{\\\"args\\\":[\\\"-eAc\\\",\\\"exportedContacts\\\"],\\\"expected\\\":\\\"\\\",\\\"unExpected\\\":\\\"Err\\\"}\"\n  },\n  {\n    \"title\": \"Execution report\",\n    \"value\": \"\"\n  }\n]",
            "code": "//Add test case variables\naddContext(this, {title: \"Test specific values\", value: JSON.stringify(test)});\n//Set user defined timeout\nthis.timeout(maxTimeOut);\n//Exec node\nvar minerAppExecVersion = child_process.execFileSync(minerApp, [ ...test.args], {stdio: ['pipe', 'pipe', 'pipe'],cwd:\"./\"});\nvar data = minerAppExecVersion.toString();\n//Add return data from execution\naddContext(this, {title: \"Execution report\", value: data});\n//Real tests\nif (test.expected !== '' && data.indexOf(test.expected) === -1) {\n    throw new Error(\"Expected: \" + test.expected);\n}\nif (test.unExpected !== '' && data.indexOf(test.unExpected) !== -1) {\n    throw new Error(\"Unxpected: \" + test.unExpected);\n}\nif (test.specificExec(data) !== true) {\n    throw new Error(`Specific execution failed on ${test.args[0]} with ${\"\\n\" + data}`);\n}",
            "err": {},
            "isRoot": false,
            "uuid": "b134d571-af44-485c-9ad8-fff396fc5488",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Check properly executon of -eAo",
            "fullTitle": "General functional tests Check properly executon of -eAo",
            "timedOut": false,
            "duration": 573,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": "[\n  {\n    \"title\": \"Test specific values\",\n    \"value\": \"{\\\"args\\\":[\\\"-eAo\\\",\\\"exportedOperators\\\"],\\\"expected\\\":\\\"\\\",\\\"unExpected\\\":\\\"Err\\\"}\"\n  },\n  {\n    \"title\": \"Execution report\",\n    \"value\": \"\"\n  }\n]",
            "code": "//Add test case variables\naddContext(this, {title: \"Test specific values\", value: JSON.stringify(test)});\n//Set user defined timeout\nthis.timeout(maxTimeOut);\n//Exec node\nvar minerAppExecVersion = child_process.execFileSync(minerApp, [ ...test.args], {stdio: ['pipe', 'pipe', 'pipe'],cwd:\"./\"});\nvar data = minerAppExecVersion.toString();\n//Add return data from execution\naddContext(this, {title: \"Execution report\", value: data});\n//Real tests\nif (test.expected !== '' && data.indexOf(test.expected) === -1) {\n    throw new Error(\"Expected: \" + test.expected);\n}\nif (test.unExpected !== '' && data.indexOf(test.unExpected) !== -1) {\n    throw new Error(\"Unxpected: \" + test.unExpected);\n}\nif (test.specificExec(data) !== true) {\n    throw new Error(`Specific execution failed on ${test.args[0]} with ${\"\\n\" + data}`);\n}",
            "err": {},
            "isRoot": false,
            "uuid": "3e88cdfb-2527-48ba-83bd-755a66cfb70d",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Check properly executon of -eK",
            "fullTitle": "General functional tests Check properly executon of -eK",
            "timedOut": false,
            "duration": 572,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": "[\n  {\n    \"title\": \"Test specific values\",\n    \"value\": \"{\\\"args\\\":[\\\"-eK\\\",\\\"exportedKeys\\\"],\\\"expected\\\":\\\"\\\",\\\"unExpected\\\":\\\"Err\\\"}\"\n  },\n  {\n    \"title\": \"Execution report\",\n    \"value\": \"\"\n  }\n]",
            "code": "//Add test case variables\naddContext(this, {title: \"Test specific values\", value: JSON.stringify(test)});\n//Set user defined timeout\nthis.timeout(maxTimeOut);\n//Exec node\nvar minerAppExecVersion = child_process.execFileSync(minerApp, [ ...test.args], {stdio: ['pipe', 'pipe', 'pipe'],cwd:\"./\"});\nvar data = minerAppExecVersion.toString();\n//Add return data from execution\naddContext(this, {title: \"Execution report\", value: data});\n//Real tests\nif (test.expected !== '' && data.indexOf(test.expected) === -1) {\n    throw new Error(\"Expected: \" + test.expected);\n}\nif (test.unExpected !== '' && data.indexOf(test.unExpected) !== -1) {\n    throw new Error(\"Unxpected: \" + test.unExpected);\n}\nif (test.specificExec(data) !== true) {\n    throw new Error(`Specific execution failed on ${test.args[0]} with ${\"\\n\" + data}`);\n}",
            "err": {},
            "isRoot": false,
            "uuid": "4cf0c63d-4fd0-43f2-82d4-7457fa55728f",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Check properly executon of -cc",
            "fullTitle": "General functional tests Check properly executon of -cc",
            "timedOut": false,
            "duration": 1638,
            "state": "failed",
            "pass": false,
            "fail": true,
            "pending": false,
            "context": "[\n  {\n    \"title\": \"Test specific values\",\n    \"value\": \"{\\\"args\\\":[\\\"-cc\\\",\\\"./units/testUnit\\\",\\\"76640-bcfe5-47604-75a2e-c0a6c-90df2-c39ef-97718\\\"],\\\"expected\\\":\\\"UsInf0073\\\",\\\"unExpected\\\":\\\"Err\\\"}\"\n  },\n  {\n    \"title\": \"Execution report\",\n    \"value\": \"Err0001\\nWarn0021\\nUsInf0054\\n\"\n  }\n]",
            "code": "//Add test case variables\naddContext(this, {title: \"Test specific values\", value: JSON.stringify(test)});\n//Set user defined timeout\nthis.timeout(maxTimeOut);\n//Exec node\nvar minerAppExecVersion = child_process.execFileSync(minerApp, [ ...test.args], {stdio: ['pipe', 'pipe', 'pipe'],cwd:\"./\"});\nvar data = minerAppExecVersion.toString();\n//Add return data from execution\naddContext(this, {title: \"Execution report\", value: data});\n//Real tests\nif (test.expected !== '' && data.indexOf(test.expected) === -1) {\n    throw new Error(\"Expected: \" + test.expected);\n}\nif (test.unExpected !== '' && data.indexOf(test.unExpected) !== -1) {\n    throw new Error(\"Unxpected: \" + test.unExpected);\n}\nif (test.specificExec(data) !== true) {\n    throw new Error(`Specific execution failed on ${test.args[0]} with ${\"\\n\" + data}`);\n}",
            "err": {
              "message": "Error: Expected: UsInf0073",
              "estack": "Error: Expected: UsInf0073\n    at Context.<anonymous> (generalTestBinary.js:204:23)"
            },
            "isRoot": false,
            "uuid": "cbadcc28-ec07-4f8e-9e51-deb2ce339f46",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Check properly executon of -v",
            "fullTitle": "General functional tests Check properly executon of -v",
            "timedOut": false,
            "duration": 585,
            "state": "failed",
            "pass": false,
            "fail": true,
            "pending": false,
            "context": "{\n  \"title\": \"Test specific values\",\n  \"value\": \"{\\\"args\\\":[\\\"-v\\\",\\\"./units/testUnit.dice\\\"],\\\"expected\\\":\\\"\\\",\\\"unExpected\\\":\\\"Err\\\"}\"\n}",
            "code": "//Add test case variables\naddContext(this, {title: \"Test specific values\", value: JSON.stringify(test)});\n//Set user defined timeout\nthis.timeout(maxTimeOut);\n//Exec node\nvar minerAppExecVersion = child_process.execFileSync(minerApp, [ ...test.args], {stdio: ['pipe', 'pipe', 'pipe'],cwd:\"./\"});\nvar data = minerAppExecVersion.toString();\n//Add return data from execution\naddContext(this, {title: \"Execution report\", value: data});\n//Real tests\nif (test.expected !== '' && data.indexOf(test.expected) === -1) {\n    throw new Error(\"Expected: \" + test.expected);\n}\nif (test.unExpected !== '' && data.indexOf(test.unExpected) !== -1) {\n    throw new Error(\"Unxpected: \" + test.unExpected);\n}\nif (test.specificExec(data) !== true) {\n    throw new Error(`Specific execution failed on ${test.args[0]} with ${\"\\n\" + data}`);\n}",
            "err": {
              "message": "Error: Command failed: ../../../../dist/Miner/Miner.exe -v ./units/testUnit.dice\nfs.js:646\r\n  return binding.open(pathModule._makeLong(path), stringToFlags(flags), mode);\r\n                 ^\r\n\r\nError: ENOENT: no such file or directory, open 'C:\\Development\\NodeJS\\EncryptionNodeJS\\Apps\\Miner\\test\\functional-test\\units\\testUnit.dice'\r\n    at Object.fs.openSync (fs.js:646:18)\r\n    at Object.fs.readFileSync (fs.js:551:33)\r\n    at printDiceUnitFromBS58 (C:\\Development\\NodeJS\\EncryptionNodeJS\\dist\\Miner\\Miner.exe:44:20141)\r\n    at Object.funcValidate (C:\\Development\\NodeJS\\EncryptionNodeJS\\dist\\Miner\\Miner.exe:44:5160)\r\n    at Number.<anonymous> (C:\\Development\\NodeJS\\EncryptionNodeJS\\dist\\Miner\\Miner.exe:44:14801)\r\n    at c (C:\\Development\\NodeJS\\EncryptionNodeJS\\dist\\Miner\\Miner.exe:10416:3333)\r\n    at Function.r.import (C:\\Development\\NodeJS\\EncryptionNodeJS\\dist\\Miner\\Miner.exe:10416:3857)\r\n    at d (C:\\Development\\NodeJS\\EncryptionNodeJS\\dist\\Miner\\Miner.exe:10413:15)\r\n    at Object.<anonymous> (C:\\Development\\NodeJS\\EncryptionNodeJS\\dist\\Miner\\Miner.exe:10416:1)\r\n    at Module._compile (module.js:635:30)\r\n",
              "estack": "Error: Command failed: ../../../../dist/Miner/Miner.exe -v ./units/testUnit.dice\nfs.js:646\r\n  return binding.open(pathModule._makeLong(path), stringToFlags(flags), mode);\r\n                 ^\r\n\r\nError: ENOENT: no such file or directory, open 'C:\\Development\\NodeJS\\EncryptionNodeJS\\Apps\\Miner\\test\\functional-test\\units\\testUnit.dice'\r\n    at Object.fs.openSync (fs.js:646:18)\r\n    at Object.fs.readFileSync (fs.js:551:33)\r\n    at printDiceUnitFromBS58 (C:\\Development\\NodeJS\\EncryptionNodeJS\\dist\\Miner\\Miner.exe:44:20141)\r\n    at Object.funcValidate (C:\\Development\\NodeJS\\EncryptionNodeJS\\dist\\Miner\\Miner.exe:44:5160)\r\n    at Number.<anonymous> (C:\\Development\\NodeJS\\EncryptionNodeJS\\dist\\Miner\\Miner.exe:44:14801)\r\n    at c (C:\\Development\\NodeJS\\EncryptionNodeJS\\dist\\Miner\\Miner.exe:10416:3333)\r\n    at Function.r.import (C:\\Development\\NodeJS\\EncryptionNodeJS\\dist\\Miner\\Miner.exe:10416:3857)\r\n    at d (C:\\Development\\NodeJS\\EncryptionNodeJS\\dist\\Miner\\Miner.exe:10413:15)\r\n    at Object.<anonymous> (C:\\Development\\NodeJS\\EncryptionNodeJS\\dist\\Miner\\Miner.exe:10416:1)\r\n\n    at checkExecSyncError (child_process.js:601:13)\n    at Object.execFileSync (child_process.js:621:13)\n    at Context.<anonymous> (generalTestBinary.js:196:53)"
            },
            "isRoot": false,
            "uuid": "79b0f2cf-a725-4f0c-b405-67fdbee95d9e",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Check properly executon of -to",
            "fullTitle": "General functional tests Check properly executon of -to",
            "timedOut": false,
            "duration": 640,
            "state": "failed",
            "pass": false,
            "fail": true,
            "pending": false,
            "context": "{\n  \"title\": \"Test specific values\",\n  \"value\": \"{\\\"args\\\":[\\\"-to\\\",\\\"./units/testUnit.dice\\\"],\\\"expected\\\":\\\"UsInf0075\\\",\\\"unExpected\\\":\\\"Err\\\"}\"\n}",
            "code": "//Add test case variables\naddContext(this, {title: \"Test specific values\", value: JSON.stringify(test)});\n//Set user defined timeout\nthis.timeout(maxTimeOut);\n//Exec node\nvar minerAppExecVersion = child_process.execFileSync(minerApp, [ ...test.args], {stdio: ['pipe', 'pipe', 'pipe'],cwd:\"./\"});\nvar data = minerAppExecVersion.toString();\n//Add return data from execution\naddContext(this, {title: \"Execution report\", value: data});\n//Real tests\nif (test.expected !== '' && data.indexOf(test.expected) === -1) {\n    throw new Error(\"Expected: \" + test.expected);\n}\nif (test.unExpected !== '' && data.indexOf(test.unExpected) !== -1) {\n    throw new Error(\"Unxpected: \" + test.unExpected);\n}\nif (test.specificExec(data) !== true) {\n    throw new Error(`Specific execution failed on ${test.args[0]} with ${\"\\n\" + data}`);\n}",
            "err": {
              "message": "Error: Command failed: ../../../../dist/Miner/Miner.exe -to ./units/testUnit.dice\nfs.js:646\r\n  return binding.open(pathModule._makeLong(path), stringToFlags(flags), mode);\r\n                 ^\r\n\r\nError: ENOENT: no such file or directory, open 'C:\\Development\\NodeJS\\EncryptionNodeJS\\Apps\\Miner\\test\\functional-test\\units\\testUnit.dice'\r\n    at Object.fs.openSync (fs.js:646:18)\r\n    at Object.fs.readFileSync (fs.js:551:33)\r\n    at Timeout._0x365f66 [as _onTimeout] (C:\\Development\\NodeJS\\EncryptionNodeJS\\dist\\Miner\\Miner.exe:44:6909)\r\n    at ontimeout (timers.js:475:11)\r\n    at tryOnTimeout (timers.js:310:5)\r\n    at Timer.listOnTimeout (timers.js:270:5)\r\n",
              "estack": "Error: Command failed: ../../../../dist/Miner/Miner.exe -to ./units/testUnit.dice\nfs.js:646\r\n  return binding.open(pathModule._makeLong(path), stringToFlags(flags), mode);\r\n                 ^\r\n\r\nError: ENOENT: no such file or directory, open 'C:\\Development\\NodeJS\\EncryptionNodeJS\\Apps\\Miner\\test\\functional-test\\units\\testUnit.dice'\r\n    at Object.fs.openSync (fs.js:646:18)\r\n    at Object.fs.readFileSync (fs.js:551:33)\r\n    at Timeout._0x365f66 [as _onTimeout] (C:\\Development\\NodeJS\\EncryptionNodeJS\\dist\\Miner\\Miner.exe:44:6909)\r\n\n    at checkExecSyncError (child_process.js:601:13)\n    at Object.execFileSync (child_process.js:621:13)\n    at Context.<anonymous> (generalTestBinary.js:196:53)"
            },
            "isRoot": false,
            "uuid": "f26e0bd3-b85a-4a0d-afc7-b41d8ee1974e",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Check properly executon of -r",
            "fullTitle": "General functional tests Check properly executon of -r",
            "timedOut": false,
            "duration": 625,
            "state": "failed",
            "pass": false,
            "fail": true,
            "pending": false,
            "context": "{\n  \"title\": \"Test specific values\",\n  \"value\": \"{\\\"args\\\":[\\\"-r\\\",\\\"./units/testUnit.dice\\\"],\\\"expected\\\":\\\"Warn0028\\\",\\\"unExpected\\\":\\\"Err\\\"}\"\n}",
            "code": "//Add test case variables\naddContext(this, {title: \"Test specific values\", value: JSON.stringify(test)});\n//Set user defined timeout\nthis.timeout(maxTimeOut);\n//Exec node\nvar minerAppExecVersion = child_process.execFileSync(minerApp, [ ...test.args], {stdio: ['pipe', 'pipe', 'pipe'],cwd:\"./\"});\nvar data = minerAppExecVersion.toString();\n//Add return data from execution\naddContext(this, {title: \"Execution report\", value: data});\n//Real tests\nif (test.expected !== '' && data.indexOf(test.expected) === -1) {\n    throw new Error(\"Expected: \" + test.expected);\n}\nif (test.unExpected !== '' && data.indexOf(test.unExpected) !== -1) {\n    throw new Error(\"Unxpected: \" + test.unExpected);\n}\nif (test.specificExec(data) !== true) {\n    throw new Error(`Specific execution failed on ${test.args[0]} with ${\"\\n\" + data}`);\n}",
            "err": {
              "message": "Error: Command failed: ../../../../dist/Miner/Miner.exe -r ./units/testUnit.dice\nfs.js:646\r\n  return binding.open(pathModule._makeLong(path), stringToFlags(flags), mode);\r\n                 ^\r\n\r\nError: ENOENT: no such file or directory, open 'C:\\Development\\NodeJS\\EncryptionNodeJS\\Apps\\Miner\\test\\functional-test\\units\\testUnit.dice'\r\n    at Object.fs.openSync (fs.js:646:18)\r\n    at Object.fs.readFileSync (fs.js:551:33)\r\n    at Object.funcRegister (C:\\Development\\NodeJS\\EncryptionNodeJS\\dist\\Miner\\Miner.exe:44:11445)\r\n    at Number.<anonymous> (C:\\Development\\NodeJS\\EncryptionNodeJS\\dist\\Miner\\Miner.exe:44:14801)\r\n    at c (C:\\Development\\NodeJS\\EncryptionNodeJS\\dist\\Miner\\Miner.exe:10416:3333)\r\n    at Function.r.import (C:\\Development\\NodeJS\\EncryptionNodeJS\\dist\\Miner\\Miner.exe:10416:3857)\r\n    at d (C:\\Development\\NodeJS\\EncryptionNodeJS\\dist\\Miner\\Miner.exe:10413:15)\r\n    at Object.<anonymous> (C:\\Development\\NodeJS\\EncryptionNodeJS\\dist\\Miner\\Miner.exe:10416:1)\r\n    at Module._compile (module.js:635:30)\r\n    at _third_party_main.js:45:20\r\n",
              "estack": "Error: Command failed: ../../../../dist/Miner/Miner.exe -r ./units/testUnit.dice\nfs.js:646\r\n  return binding.open(pathModule._makeLong(path), stringToFlags(flags), mode);\r\n                 ^\r\n\r\nError: ENOENT: no such file or directory, open 'C:\\Development\\NodeJS\\EncryptionNodeJS\\Apps\\Miner\\test\\functional-test\\units\\testUnit.dice'\r\n    at Object.fs.openSync (fs.js:646:18)\r\n    at Object.fs.readFileSync (fs.js:551:33)\r\n    at Object.funcRegister (C:\\Development\\NodeJS\\EncryptionNodeJS\\dist\\Miner\\Miner.exe:44:11445)\r\n    at Number.<anonymous> (C:\\Development\\NodeJS\\EncryptionNodeJS\\dist\\Miner\\Miner.exe:44:14801)\r\n    at c (C:\\Development\\NodeJS\\EncryptionNodeJS\\dist\\Miner\\Miner.exe:10416:3333)\r\n    at Function.r.import (C:\\Development\\NodeJS\\EncryptionNodeJS\\dist\\Miner\\Miner.exe:10416:3857)\r\n    at d (C:\\Development\\NodeJS\\EncryptionNodeJS\\dist\\Miner\\Miner.exe:10413:15)\r\n    at Object.<anonymous> (C:\\Development\\NodeJS\\EncryptionNodeJS\\dist\\Miner\\Miner.exe:10416:1)\r\n    at _third_party_main.js:45:20\r\n\n    at checkExecSyncError (child_process.js:601:13)\n    at Object.execFileSync (child_process.js:621:13)\n    at Context.<anonymous> (generalTestBinary.js:196:53)"
            },
            "isRoot": false,
            "uuid": "62c378bb-226b-45a7-9c91-617ac6b44485",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Check properly executon of -tn",
            "fullTitle": "General functional tests Check properly executon of -tn",
            "timedOut": false,
            "duration": 606,
            "state": "failed",
            "pass": false,
            "fail": true,
            "pending": false,
            "context": "{\n  \"title\": \"Test specific values\",\n  \"value\": \"{\\\"args\\\":[\\\"-tn\\\",\\\"./units/testUnit.dice\\\",\\\"./units/testUnit.dice\\\"],\\\"expected\\\":\\\"UsInf0076\\\",\\\"unExpected\\\":\\\"Err\\\"}\"\n}",
            "code": "//Add test case variables\naddContext(this, {title: \"Test specific values\", value: JSON.stringify(test)});\n//Set user defined timeout\nthis.timeout(maxTimeOut);\n//Exec node\nvar minerAppExecVersion = child_process.execFileSync(minerApp, [ ...test.args], {stdio: ['pipe', 'pipe', 'pipe'],cwd:\"./\"});\nvar data = minerAppExecVersion.toString();\n//Add return data from execution\naddContext(this, {title: \"Execution report\", value: data});\n//Real tests\nif (test.expected !== '' && data.indexOf(test.expected) === -1) {\n    throw new Error(\"Expected: \" + test.expected);\n}\nif (test.unExpected !== '' && data.indexOf(test.unExpected) !== -1) {\n    throw new Error(\"Unxpected: \" + test.unExpected);\n}\nif (test.specificExec(data) !== true) {\n    throw new Error(`Specific execution failed on ${test.args[0]} with ${\"\\n\" + data}`);\n}",
            "err": {
              "message": "Error: Command failed: ../../../../dist/Miner/Miner.exe -tn ./units/testUnit.dice ./units/testUnit.dice\nfs.js:646\r\n  return binding.open(pathModule._makeLong(path), stringToFlags(flags), mode);\r\n                 ^\r\n\r\nError: ENOENT: no such file or directory, open 'C:\\Development\\NodeJS\\EncryptionNodeJS\\Apps\\Miner\\test\\functional-test\\units\\testUnit.dice'\r\n    at Object.fs.openSync (fs.js:646:18)\r\n    at Object.fs.readFileSync (fs.js:551:33)\r\n    at Timeout._0x32d02d [as _onTimeout] (C:\\Development\\NodeJS\\EncryptionNodeJS\\dist\\Miner\\Miner.exe:44:9912)\r\n    at ontimeout (timers.js:475:11)\r\n    at tryOnTimeout (timers.js:310:5)\r\n    at Timer.listOnTimeout (timers.js:270:5)\r\n",
              "estack": "Error: Command failed: ../../../../dist/Miner/Miner.exe -tn ./units/testUnit.dice ./units/testUnit.dice\nfs.js:646\r\n  return binding.open(pathModule._makeLong(path), stringToFlags(flags), mode);\r\n                 ^\r\n\r\nError: ENOENT: no such file or directory, open 'C:\\Development\\NodeJS\\EncryptionNodeJS\\Apps\\Miner\\test\\functional-test\\units\\testUnit.dice'\r\n    at Object.fs.openSync (fs.js:646:18)\r\n    at Object.fs.readFileSync (fs.js:551:33)\r\n    at Timeout._0x32d02d [as _onTimeout] (C:\\Development\\NodeJS\\EncryptionNodeJS\\dist\\Miner\\Miner.exe:44:9912)\r\n\n    at checkExecSyncError (child_process.js:601:13)\n    at Object.execFileSync (child_process.js:621:13)\n    at Context.<anonymous> (generalTestBinary.js:196:53)"
            },
            "isRoot": false,
            "uuid": "37d6bc7f-552b-4b2b-849b-e972c5b3c354",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Check properly executon of -b",
            "fullTitle": "General functional tests Check properly executon of -b",
            "timedOut": false,
            "duration": 618,
            "state": "failed",
            "pass": false,
            "fail": true,
            "pending": false,
            "context": "{\n  \"title\": \"Test specific values\",\n  \"value\": \"{\\\"args\\\":[\\\"-b\\\",\\\"./units/\\\"],\\\"expected\\\":\\\"\\\",\\\"unExpected\\\":\\\"Err\\\"}\"\n}",
            "code": "//Add test case variables\naddContext(this, {title: \"Test specific values\", value: JSON.stringify(test)});\n//Set user defined timeout\nthis.timeout(maxTimeOut);\n//Exec node\nvar minerAppExecVersion = child_process.execFileSync(minerApp, [ ...test.args], {stdio: ['pipe', 'pipe', 'pipe'],cwd:\"./\"});\nvar data = minerAppExecVersion.toString();\n//Add return data from execution\naddContext(this, {title: \"Execution report\", value: data});\n//Real tests\nif (test.expected !== '' && data.indexOf(test.expected) === -1) {\n    throw new Error(\"Expected: \" + test.expected);\n}\nif (test.unExpected !== '' && data.indexOf(test.unExpected) !== -1) {\n    throw new Error(\"Unxpected: \" + test.unExpected);\n}\nif (test.specificExec(data) !== true) {\n    throw new Error(`Specific execution failed on ${test.args[0]} with ${\"\\n\" + data}`);\n}",
            "err": {
              "message": "Error: Command failed: ../../../../dist/Miner/Miner.exe -b ./units/\nC:\\Development\\NodeJS\\EncryptionNodeJS\\dist\\Miner\\Miner.exe:44\r\nvar DICE=new modDICEUnit();var DICEScrap=new modDICEUnit();var DICEProto=new modDICEPrototype();var DiceCalculatorL=new modDICECalculator('js');var DNS=new modDNSBinder();var AddressGen=new modDigAddress();var TCPClient=new modTCPWorker();var DICEValue=new modDICEValue(DiceCalculatorL);var Time=new Date();var Bs58=new modBase58();var CommandParser=new modCommandParser(process[a4_0x43a9('0x0')],exConfig[a4_0x43a9('0x1')]);var isRequestTransmitted=![];var currentState=CommandParser['getState']();var keyPair={};var scheduler_10ms=undefined;var zeroes=undefined;var globalTh=undefined;var encryptor=undefined;var view_console=new modVIEW(exConfig['minerVIEW_IF']['tableCodes'],exConfig[a4_0x43a9('0x2')]['tablePorts'],exConfig['minerViewOut']);view_console['setAllowed'](exConfig[a4_0x43a9('0x3')]);var isCudaReq=![];var securityCounter=0x0;var isTcpReady=![];var isDnsHttpRequested=![];var diceScrapFuncHandlers=undefined;var appArgs=JSON[a4_0x43a9('0x4')]\r\n\r\nTypeError: Cannot read property 'op' of undefined\r\n    at Timeout._0x22cc10 [as _onTimeout] (C:\\Development\\NodeJS\\EncryptionNodeJS\\dist\\Miner\\Miner.exe:44:26894)\r\n    at ontimeout (timers.js:475:11)\r\n    at tryOnTimeout (timers.js:310:5)\r\n    at Timer.listOnTimeout (timers.js:270:5)\r\n",
              "estack": "Error: Command failed: ../../../../dist/Miner/Miner.exe -b ./units/\nC:\\Development\\NodeJS\\EncryptionNodeJS\\dist\\Miner\\Miner.exe:44\r\nvar DICE=new modDICEUnit();var DICEScrap=new modDICEUnit();var DICEProto=new modDICEPrototype();var DiceCalculatorL=new modDICECalculator('js');var DNS=new modDNSBinder();var AddressGen=new modDigAddress();var TCPClient=new modTCPWorker();var DICEValue=new modDICEValue(DiceCalculatorL);var Time=new Date();var Bs58=new modBase58();var CommandParser=new modCommandParser(process[a4_0x43a9('0x0')],exConfig[a4_0x43a9('0x1')]);var isRequestTransmitted=![];var currentState=CommandParser['getState']();var keyPair={};var scheduler_10ms=undefined;var zeroes=undefined;var globalTh=undefined;var encryptor=undefined;var view_console=new modVIEW(exConfig['minerVIEW_IF']['tableCodes'],exConfig[a4_0x43a9('0x2')]['tablePorts'],exConfig['minerViewOut']);view_console['setAllowed'](exConfig[a4_0x43a9('0x3')]);var isCudaReq=![];var securityCounter=0x0;var isTcpReady=![];var isDnsHttpRequested=![];var diceScrapFuncHandlers=undefined;var appArgs=JSON[a4_0x43a9('0x4')]\r\n\r\nTypeError: Cannot read property 'op' of undefined\r\n    at Timeout._0x22cc10 [as _onTimeout] (C:\\Development\\NodeJS\\EncryptionNodeJS\\dist\\Miner\\Miner.exe:44:26894)\r\n\n    at checkExecSyncError (child_process.js:601:13)\n    at Object.execFileSync (child_process.js:621:13)\n    at Context.<anonymous> (generalTestBinary.js:196:53)"
            },
            "isRoot": false,
            "uuid": "46380729-cfbd-4879-b805-f5185781e44f",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Check properly executon of -lU",
            "fullTitle": "General functional tests Check properly executon of -lU",
            "timedOut": false,
            "duration": 630,
            "state": "failed",
            "pass": false,
            "fail": true,
            "pending": false,
            "context": "{\n  \"title\": \"Test specific values\",\n  \"value\": \"{\\\"args\\\":[\\\"-lU\\\",\\\"./units/\\\"],\\\"expected\\\":\\\"\\\",\\\"unExpected\\\":\\\"Err\\\"}\"\n}",
            "code": "//Add test case variables\naddContext(this, {title: \"Test specific values\", value: JSON.stringify(test)});\n//Set user defined timeout\nthis.timeout(maxTimeOut);\n//Exec node\nvar minerAppExecVersion = child_process.execFileSync(minerApp, [ ...test.args], {stdio: ['pipe', 'pipe', 'pipe'],cwd:\"./\"});\nvar data = minerAppExecVersion.toString();\n//Add return data from execution\naddContext(this, {title: \"Execution report\", value: data});\n//Real tests\nif (test.expected !== '' && data.indexOf(test.expected) === -1) {\n    throw new Error(\"Expected: \" + test.expected);\n}\nif (test.unExpected !== '' && data.indexOf(test.unExpected) !== -1) {\n    throw new Error(\"Unxpected: \" + test.unExpected);\n}\nif (test.specificExec(data) !== true) {\n    throw new Error(`Specific execution failed on ${test.args[0]} with ${\"\\n\" + data}`);\n}",
            "err": {
              "message": "Error: Command failed: ../../../../dist/Miner/Miner.exe -lU ./units/\nC:\\Development\\NodeJS\\EncryptionNodeJS\\dist\\Miner\\Miner.exe:44\r\nvar DICE=new modDICEUnit();var DICEScrap=new modDICEUnit();var DICEProto=new modDICEPrototype();var DiceCalculatorL=new modDICECalculator('js');var DNS=new modDNSBinder();var AddressGen=new modDigAddress();var TCPClient=new modTCPWorker();var DICEValue=new modDICEValue(DiceCalculatorL);var Time=new Date();var Bs58=new modBase58();var CommandParser=new modCommandParser(process[a4_0x43a9('0x0')],exConfig[a4_0x43a9('0x1')]);var isRequestTransmitted=![];var currentState=CommandParser['getState']();var keyPair={};var scheduler_10ms=undefined;var zeroes=undefined;var globalTh=undefined;var encryptor=undefined;var view_console=new modVIEW(exConfig['minerVIEW_IF']['tableCodes'],exConfig[a4_0x43a9('0x2')]['tablePorts'],exConfig['minerViewOut']);view_console['setAllowed'](exConfig[a4_0x43a9('0x3')]);var isCudaReq=![];var securityCounter=0x0;var isTcpReady=![];var isDnsHttpRequested=![];var diceScrapFuncHandlers=undefined;var appArgs=JSON[a4_0x43a9('0x4')]\r\n\r\nTypeError: Cannot read property 'op' of undefined\r\n    at Timeout._0x2de75a [as _onTimeout] (C:\\Development\\NodeJS\\EncryptionNodeJS\\dist\\Miner\\Miner.exe:44:31564)\r\n    at ontimeout (timers.js:475:11)\r\n    at tryOnTimeout (timers.js:310:5)\r\n    at Timer.listOnTimeout (timers.js:270:5)\r\n",
              "estack": "Error: Command failed: ../../../../dist/Miner/Miner.exe -lU ./units/\nC:\\Development\\NodeJS\\EncryptionNodeJS\\dist\\Miner\\Miner.exe:44\r\nvar DICE=new modDICEUnit();var DICEScrap=new modDICEUnit();var DICEProto=new modDICEPrototype();var DiceCalculatorL=new modDICECalculator('js');var DNS=new modDNSBinder();var AddressGen=new modDigAddress();var TCPClient=new modTCPWorker();var DICEValue=new modDICEValue(DiceCalculatorL);var Time=new Date();var Bs58=new modBase58();var CommandParser=new modCommandParser(process[a4_0x43a9('0x0')],exConfig[a4_0x43a9('0x1')]);var isRequestTransmitted=![];var currentState=CommandParser['getState']();var keyPair={};var scheduler_10ms=undefined;var zeroes=undefined;var globalTh=undefined;var encryptor=undefined;var view_console=new modVIEW(exConfig['minerVIEW_IF']['tableCodes'],exConfig[a4_0x43a9('0x2')]['tablePorts'],exConfig['minerViewOut']);view_console['setAllowed'](exConfig[a4_0x43a9('0x3')]);var isCudaReq=![];var securityCounter=0x0;var isTcpReady=![];var isDnsHttpRequested=![];var diceScrapFuncHandlers=undefined;var appArgs=JSON[a4_0x43a9('0x4')]\r\n\r\nTypeError: Cannot read property 'op' of undefined\r\n    at Timeout._0x2de75a [as _onTimeout] (C:\\Development\\NodeJS\\EncryptionNodeJS\\dist\\Miner\\Miner.exe:44:31564)\r\n\n    at checkExecSyncError (child_process.js:601:13)\n    at Object.execFileSync (child_process.js:621:13)\n    at Context.<anonymous> (generalTestBinary.js:196:53)"
            },
            "isRoot": false,
            "uuid": "c9063dfd-7708-47c3-b545-84dc5cad7e1d",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Check properly executon of -tc",
            "fullTitle": "General functional tests Check properly executon of -tc",
            "timedOut": false,
            "duration": 588,
            "state": "failed",
            "pass": false,
            "fail": true,
            "pending": false,
            "context": "{\n  \"title\": \"Test specific values\",\n  \"value\": \"{\\\"args\\\":[\\\"-tc\\\",\\\"./units/testUnit.dice\\\",\\\"./units/encrypted\\\",\\\"d8f54-4fe68-98060-78b6d-bbbf3-1908b-473de-ed2b2\\\"],\\\"expected\\\":\\\"\\\",\\\"unExpected\\\":\\\"Err\\\"}\"\n}",
            "code": "//Add test case variables\naddContext(this, {title: \"Test specific values\", value: JSON.stringify(test)});\n//Set user defined timeout\nthis.timeout(maxTimeOut);\n//Exec node\nvar minerAppExecVersion = child_process.execFileSync(minerApp, [ ...test.args], {stdio: ['pipe', 'pipe', 'pipe'],cwd:\"./\"});\nvar data = minerAppExecVersion.toString();\n//Add return data from execution\naddContext(this, {title: \"Execution report\", value: data});\n//Real tests\nif (test.expected !== '' && data.indexOf(test.expected) === -1) {\n    throw new Error(\"Expected: \" + test.expected);\n}\nif (test.unExpected !== '' && data.indexOf(test.unExpected) !== -1) {\n    throw new Error(\"Unxpected: \" + test.unExpected);\n}\nif (test.specificExec(data) !== true) {\n    throw new Error(`Specific execution failed on ${test.args[0]} with ${\"\\n\" + data}`);\n}",
            "err": {
              "message": "Error: Command failed: ../../../../dist/Miner/Miner.exe -tc ./units/testUnit.dice ./units/encrypted d8f54-4fe68-98060-78b6d-bbbf3-1908b-473de-ed2b2\nfs.js:646\r\n  return binding.open(pathModule._makeLong(path), stringToFlags(flags), mode);\r\n                 ^\r\n\r\nError: ENOENT: no such file or directory, open 'C:\\Development\\NodeJS\\EncryptionNodeJS\\Apps\\Miner\\test\\functional-test\\units\\testUnit.dice'\r\n    at Object.fs.openSync (fs.js:646:18)\r\n    at Object.fs.readFileSync (fs.js:551:33)\r\n    at Timeout._0x1ec3d4 [as _onTimeout] (C:\\Development\\NodeJS\\EncryptionNodeJS\\dist\\Miner\\Miner.exe:44:8369)\r\n    at ontimeout (timers.js:475:11)\r\n    at tryOnTimeout (timers.js:310:5)\r\n    at Timer.listOnTimeout (timers.js:270:5)\r\n",
              "estack": "Error: Command failed: ../../../../dist/Miner/Miner.exe -tc ./units/testUnit.dice ./units/encrypted d8f54-4fe68-98060-78b6d-bbbf3-1908b-473de-ed2b2\nfs.js:646\r\n  return binding.open(pathModule._makeLong(path), stringToFlags(flags), mode);\r\n                 ^\r\n\r\nError: ENOENT: no such file or directory, open 'C:\\Development\\NodeJS\\EncryptionNodeJS\\Apps\\Miner\\test\\functional-test\\units\\testUnit.dice'\r\n    at Object.fs.openSync (fs.js:646:18)\r\n    at Object.fs.readFileSync (fs.js:551:33)\r\n    at Timeout._0x1ec3d4 [as _onTimeout] (C:\\Development\\NodeJS\\EncryptionNodeJS\\dist\\Miner\\Miner.exe:44:8369)\r\n\n    at checkExecSyncError (child_process.js:601:13)\n    at Object.execFileSync (child_process.js:621:13)\n    at Context.<anonymous> (generalTestBinary.js:196:53)"
            },
            "isRoot": false,
            "uuid": "bcf4a8f9-653f-4178-8fab-756ccd3d774d",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Check is all commands covert",
            "fullTitle": "General functional tests Check is all commands covert",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var covert = [];\nvar unCovert = [];\nvar duplicated = [];\nfor (let command of commands) {\n    for (let test of generalTest) {\n        if (command.args[0] === test.args[0]) {\n            if (covert.indexOf(command.args[0]) === -1) {\n                covert.push(command.args[0]);\n            } else {\n                duplicated.push(command.args[0]);\n            }\n        }\n    }\n    if (unCovert.indexOf(command.args[0]) === -1 &&\n            covert.indexOf(command.args[0]) === -1) {\n        unCovert.push(command.args[0]);\n    } else {\n        // The command already exist\n    }\n}\nif (unCovert.length > 0) {\n    throw new Error(\n            `Not all commands covert  \n             Covert ${covert.length} / Expected ${commands.length} \n             Covert commands: ${covert}\n             Uncovert commands: ${unCovert}\n             Duplicated commands: ${duplicated}`);\n}\nif (duplicated.length > 0) {\n    throw new Error(`Duplicated commands: ${duplicated}`);\n}",
            "err": {},
            "isRoot": false,
            "uuid": "0971e697-a0e9-45cd-a00a-e9e74d2ba8d7",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "b3d94d45-a8f1-4ce4-83a7-a13f5b8a7879",
          "a141becb-9914-457d-9bcf-00276ce4f645",
          "e6cc703f-2368-4f89-9dbc-62d796737639",
          "39f274fd-8502-4c5e-adcf-1dbfdfa5c1d1",
          "e63abbaa-7989-4c7d-a1bf-963a96ac98f9",
          "e601d7f8-c2e9-4c85-8967-7b2764127edd",
          "f8a2bb0d-fb0a-4def-934d-0c3278227155",
          "4e3b2e01-d3f4-470f-b1cb-fcdc81272cae",
          "5fdf4dd9-645d-4b0e-848b-d76e5ed48f1d",
          "055c47a8-8c78-4a93-ad74-021bf5f7caf1",
          "1c428838-79b5-4485-a6ee-1cc55d080b2a",
          "6281bc05-d12c-44ef-b329-443a5af2aa13",
          "dcc64f6d-3ada-4c24-86e7-5192dd6cc978",
          "31707886-ab25-4b43-8c76-cce17016d4fe",
          "d587d9ef-80f8-4202-bdd8-84d781d95dc6",
          "b134d571-af44-485c-9ad8-fff396fc5488",
          "3e88cdfb-2527-48ba-83bd-755a66cfb70d",
          "4cf0c63d-4fd0-43f2-82d4-7457fa55728f",
          "0971e697-a0e9-45cd-a00a-e9e74d2ba8d7"
        ],
        "failures": [
          "cbadcc28-ec07-4f8e-9e51-deb2ce339f46",
          "79b0f2cf-a725-4f0c-b405-67fdbee95d9e",
          "f26e0bd3-b85a-4a0d-afc7-b41d8ee1974e",
          "62c378bb-226b-45a7-9c91-617ac6b44485",
          "37d6bc7f-552b-4b2b-849b-e972c5b3c354",
          "46380729-cfbd-4879-b805-f5185781e44f",
          "c9063dfd-7708-47c3-b545-84dc5cad7e1d",
          "bcf4a8f9-653f-4178-8fab-756ccd3d774d"
        ],
        "pending": [],
        "skipped": [],
        "duration": 17506,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      }
    ],
    "passes": [],
    "failures": [],
    "pending": [],
    "skipped": [],
    "duration": 0,
    "root": true,
    "rootEmpty": true,
    "_timeout": 2000
  },
  "copyrightYear": 2018
}