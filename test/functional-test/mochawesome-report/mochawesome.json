{
  "stats": {
    "suites": 1,
    "tests": 27,
    "passes": 19,
    "pending": 0,
    "failures": 8,
    "start": "2018-06-24T18:28:59.451Z",
    "end": "2018-06-24T18:29:17.703Z",
    "duration": 18252,
    "testsRegistered": 27,
    "passPercent": 70.4,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "warning",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "uuid": "1803c732-3bbf-493c-acfa-e3fc10061514",
    "title": "",
    "fullFile": "",
    "file": "",
    "beforeHooks": [],
    "afterHooks": [],
    "tests": [],
    "suites": [
      {
        "uuid": "17a799a8-7fab-4a70-a17c-55faddc3e2a2",
        "title": "General functional tests",
        "fullFile": "C:\\Development\\NodeJS\\EncryptionNodeJS_Git\\Apps\\Miner\\test\\functional-test\\generalTestBinary.js",
        "file": "\\generalTestBinary.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook",
            "fullTitle": "General functional tests \"before all\" hook",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "modFs.readdirSync('./units/').forEach(file => {\n    modFs.unlinkSync(`./units/${file}`);\n});",
            "err": {},
            "isRoot": false,
            "uuid": "39a80d47-1501-4e77-8cc6-5d3039c530ba",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [],
        "tests": [
          {
            "title": "Check is operator Valid",
            "fullTitle": "General functional tests Check is operator Valid",
            "timedOut": false,
            "duration": 676,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var operatorExecutor = child_process.execFileSync(operatorApp,[\"-ver\"], {stdio: ['pipe', 'pipe', 'pipe']});\nvar data = operatorExecutor.toString();\nif (data.length === 0) {\n    throw new Error(\"Operator application is not valid\");\n}",
            "err": {},
            "isRoot": false,
            "uuid": "999fd02a-881c-4906-9804-252c16bc83e3",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Check properly executon of -ver",
            "fullTitle": "General functional tests Check properly executon of -ver",
            "timedOut": false,
            "duration": 605,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": "[\n  {\n    \"title\": \"Test specific values\",\n    \"value\": \"{\\\"args\\\":[\\\"-ver\\\"],\\\"expected\\\":\\\"DICE Money <www.dice.money> - Miner Application Version[1.49 Patch 2] - 18.06.2018 \\\\nWritten by Mihail Maldzhanski <pollarize@gmail.com>\\\",\\\"unExpected\\\":\\\"Err\\\"}\"\n  },\n  {\n    \"title\": \"Execution report\",\n    \"value\": \"DICE Money <www.dice.money> - Miner Application Version[1.49 Patch 2] - 18.06.2018 \\nWritten by Mihail Maldzhanski <pollarize@gmail.com>\\n\"\n  }\n]",
            "code": "//Add test case variables\naddContext(this, {title: \"Test specific values\", value: JSON.stringify(test)});\n//Set user defined timeout\nthis.timeout(maxTimeOut);\n//Exec node\nvar minerAppExecVersion = child_process.execFileSync(minerApp, [ ...test.args], {stdio: ['pipe', 'pipe', 'pipe'],cwd:\"./\"});\nvar data = minerAppExecVersion.toString();\n//Add return data from execution\naddContext(this, {title: \"Execution report\", value: data});\n//Real tests\nif (test.expected !== '' && data.indexOf(test.expected) === -1) {\n    throw new Error(\"Expected: \" + test.expected);\n}\nif (test.unExpected !== '' && data.indexOf(test.unExpected) !== -1) {\n    throw new Error(\"Unxpected: \" + test.unExpected);\n}\nif (test.specificExec(data) !== true) {\n    throw new Error(`Specific execution failed on ${test.args[0]} with ${\"\\n\" + data}`);\n}",
            "err": {},
            "isRoot": false,
            "uuid": "1c9efcc0-20bf-4afd-b6e5-ca03dad50976",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Check properly executon of -h",
            "fullTitle": "General functional tests Check properly executon of -h",
            "timedOut": false,
            "duration": 588,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": "[\n  {\n    \"title\": \"Test specific values\",\n    \"value\": \"{\\\"args\\\":[\\\"-h\\\"],\\\"expected\\\":\\\"DICE Money <www.dice.money> - Miner Application Version[1.49 Patch 2] - 18.06.2018 \\\\nWritten by Mihail Maldzhanski <pollarize@gmail.com>\\\",\\\"unExpected\\\":\\\"Err\\\"}\"\n  },\n  {\n    \"title\": \"Execution report\",\n    \"value\": \"\\nDICE Money <www.dice.money> - Miner Application Version[1.49 Patch 2] - 18.06.2018 \\nWritten by Mihail Maldzhanski <pollarize@gmail.com>\\n\\n  -cCfg,--createConfiguration\\n     Create Configuration of the current owner.\\n     Usage: <application> <-cCfg or --createConfiguration> <nameOfOwner> <keyPair> <configurationFile>\\n\\n  -uCfg,--updateConfiguration\\n     Update Configuration of the current owner.(Do not delete existing contacts and operators!)\\n     Usage: <application> <-uCfg or --updateConfiguration> <nameOfOwner> <keyPair> <configurationFile>\\n\\n  -iCfg,--importConfiguration\\n     Import external configration file.\\n     Usage: <application> <-iCfg or --importConfiguration> <externalConfigurationFile> <configurationFile>\\n\\n  -aC,--addContact\\n     Add new Contact in configuration file.\\n     Usage: <application> <-aC or --addContact> <nameOfContact> <digitalAddrOfContact> <configurationFile>\\n\\n  -aO,--addOperator\\n     Add new Operator in configration file.\\n     Usage: <application> <-aO or --addOperator> <nameOfOperator> <digitalAddrOfOperator> <configurationFile>\\n\\n  -eAc,--exportAllContacts\\n     Export all Contacts from local configuration file.\\n     Usage: <application> <-eAc or --exportAllContacts> <externalConfigurationFile> <configurationFile>\\n\\n  -eAo,--exportAllOperators\\n     Export all Operators from local configration file.\\n     Usage: <application> <-eAo or --exportAllOperators> <externalConfigurationFile> <configurationFile>\\n\\n  -lO,--listOperators\\n     List all Operators in confgiration file.\\n     Usage: <application> <-lO or --listOperators> <configurationFile>\\n\\n  -lC,--listContacts\\n     List all Contacts in confgiration file.\\n     Usage: <application> <-lC or --listContacts> <configurationFile>\\n\\n  -eK,--exportKeys\\n     Export keys saved in configuration file.\\n     Usage: <application> <-eK or --exportKeys> <fileOutput> <configurationFile>\\n\\n  -pD,--printDigitalAddress\\n     Print Digital Address from configuration file.\\n     Usage: <application> <-pD or --printDigitalAddress> <configurationFile>\\n\\n  -pN,--printName\\n     Print Name from configuration file.\\n     Usage: <application> <-pN or --printName> <configurationFile>\\n\\n  -lGO,--listGlobalOperators\\n     List all Global Operators.\\n     Usage: <application> <-lGO or --listGlobalOperators> <>\\n\\n  -uDns,--updateDnsBinder\\n     Downaload latest version of dns binder file.\\n     Usage: <application> <-uDns or --updateDnsBinder> <>\\n\\n  -b,--balance\\n     Calculate current balance of DICE in specified folder.\\n     Usage: <application> <-b or --balance> <folderWithUnits> <keyPair>\\n\\n  -lU,--listUnits\\n     List all units in specific folder with current value, owner and operator.\\n     Usage: <application> <-lU or --listUnits> <folderWithUnits> <keyPair>\\n\\n  -v,--validate\\n     Exports content from Base58 saved unit and value of the unit\\n     Usage: <application> <-v or --validate> <diceUnit> <keyPair>\\n\\n  -k,--keygen\\n     Generate new KeyPair of Digital Address and Private Key\\n     Usage: <application> <-k or --keygen> <fileOutput>\\n\\n  -to,--tradeOwnerless\\n     Trade ownerless dice unit\\n     Usage: <application> <-to or --tradeOwnerless> <diceUnit> <keyPair>\\n\\n  -tc,--tradeCurrent\\n     Trade current owner of unit \\n     Usage: <application> <-tc or --tradeCurrent> <diceUnit> <fileOutput> <addrMin> <keyPair>\\n\\n  -tn,--tradeNew\\n     Trade request from new owner (for ownerless unit or traded unit)\\n     Usage: <application> <-tn or --tradeNew> <diceUnit> <fileOutput> <keyPair>\\n\\n  -cc,--calculateCuda\\n     Calculate new DICE Unit by using CUDA accelerated application\\n     Usage: <application> <-cc or --calculateCuda> <fileOutput> <addrOp> <specificUnitValue> <keyPair>\\n\\n  -r,--register\\n     Send prototype to operator to register it in its DB.\\n     Usage: <application> <-r or --register> <diceUnit> <keyPair>\\n\\n  -ver,--version\\n     Prints application current version\\n     Usage: <application> <-ver or --version> <>\\n\\n  -h,--help\\n     Print Following list\\n     Usage: <application> <-h or --help> <>\\n\\n\\n\"\n  }\n]",
            "code": "//Add test case variables\naddContext(this, {title: \"Test specific values\", value: JSON.stringify(test)});\n//Set user defined timeout\nthis.timeout(maxTimeOut);\n//Exec node\nvar minerAppExecVersion = child_process.execFileSync(minerApp, [ ...test.args], {stdio: ['pipe', 'pipe', 'pipe'],cwd:\"./\"});\nvar data = minerAppExecVersion.toString();\n//Add return data from execution\naddContext(this, {title: \"Execution report\", value: data});\n//Real tests\nif (test.expected !== '' && data.indexOf(test.expected) === -1) {\n    throw new Error(\"Expected: \" + test.expected);\n}\nif (test.unExpected !== '' && data.indexOf(test.unExpected) !== -1) {\n    throw new Error(\"Unxpected: \" + test.unExpected);\n}\nif (test.specificExec(data) !== true) {\n    throw new Error(`Specific execution failed on ${test.args[0]} with ${\"\\n\" + data}`);\n}",
            "err": {},
            "isRoot": false,
            "uuid": "2c4ca463-62e5-434c-99b2-7cb786fbf2a9",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Check properly executon of -uDns",
            "fullTitle": "General functional tests Check properly executon of -uDns",
            "timedOut": false,
            "duration": 1488,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": "[\n  {\n    \"title\": \"Test specific values\",\n    \"value\": \"{\\\"args\\\":[\\\"-uDns\\\"],\\\"expected\\\":\\\"UsInf0089\\\",\\\"unExpected\\\":\\\"Err\\\"}\"\n  },\n  {\n    \"title\": \"Execution report\",\n    \"value\": \"UsInf0089\\nUsInf0054\\n\"\n  }\n]",
            "code": "//Add test case variables\naddContext(this, {title: \"Test specific values\", value: JSON.stringify(test)});\n//Set user defined timeout\nthis.timeout(maxTimeOut);\n//Exec node\nvar minerAppExecVersion = child_process.execFileSync(minerApp, [ ...test.args], {stdio: ['pipe', 'pipe', 'pipe'],cwd:\"./\"});\nvar data = minerAppExecVersion.toString();\n//Add return data from execution\naddContext(this, {title: \"Execution report\", value: data});\n//Real tests\nif (test.expected !== '' && data.indexOf(test.expected) === -1) {\n    throw new Error(\"Expected: \" + test.expected);\n}\nif (test.unExpected !== '' && data.indexOf(test.unExpected) !== -1) {\n    throw new Error(\"Unxpected: \" + test.unExpected);\n}\nif (test.specificExec(data) !== true) {\n    throw new Error(`Specific execution failed on ${test.args[0]} with ${\"\\n\" + data}`);\n}",
            "err": {},
            "isRoot": false,
            "uuid": "bafc88a4-44ff-42b9-a535-5b6ae604377a",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Check properly executon of -lGO",
            "fullTitle": "General functional tests Check properly executon of -lGO",
            "timedOut": false,
            "duration": 632,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": "[\n  {\n    \"title\": \"Test specific values\",\n    \"value\": \"{\\\"args\\\":[\\\"-lGO\\\"],\\\"expected\\\":\\\"UsInf0054\\\",\\\"unExpected\\\":\\\"Err\\\"}\"\n  },\n  {\n    \"title\": \"Execution report\",\n    \"value\": \"1. d8f54-4fe68-98060-78b6d-bbbf3-1908b-473de-ed2b2 - Test1 S-10 Sofia (OpiZero H2+/256M/4G)\\n2. 11f18-19ec1-b4e42-c96de-906fc-86fd6-d64e4-ed409 - Test2 S-8 Sofia (NeoPlus2 H5/1G/8G)\\n3. 58b4b-cfd09-290eb-0ad2f-c6077-c2f0d-fa940-0f4d4 - Test3 S-9 London (NeoPlus2 H5/1G/8G)\\n4. 76640-bcfe5-47604-75a2e-c0a6c-90df2-c39ef-97718 - undefined\\nUsInf0054\\n\"\n  }\n]",
            "code": "//Add test case variables\naddContext(this, {title: \"Test specific values\", value: JSON.stringify(test)});\n//Set user defined timeout\nthis.timeout(maxTimeOut);\n//Exec node\nvar minerAppExecVersion = child_process.execFileSync(minerApp, [ ...test.args], {stdio: ['pipe', 'pipe', 'pipe'],cwd:\"./\"});\nvar data = minerAppExecVersion.toString();\n//Add return data from execution\naddContext(this, {title: \"Execution report\", value: data});\n//Real tests\nif (test.expected !== '' && data.indexOf(test.expected) === -1) {\n    throw new Error(\"Expected: \" + test.expected);\n}\nif (test.unExpected !== '' && data.indexOf(test.unExpected) !== -1) {\n    throw new Error(\"Unxpected: \" + test.unExpected);\n}\nif (test.specificExec(data) !== true) {\n    throw new Error(`Specific execution failed on ${test.args[0]} with ${\"\\n\" + data}`);\n}",
            "err": {},
            "isRoot": false,
            "uuid": "2cc946eb-f3d2-41c2-b864-76f7f138dd84",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Check properly executon of -k",
            "fullTitle": "General functional tests Check properly executon of -k",
            "timedOut": false,
            "duration": 638,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": "[\n  {\n    \"title\": \"Test specific values\",\n    \"value\": \"{\\\"args\\\":[\\\"-k\\\",\\\"testKey\\\"],\\\"expected\\\":\\\"UsInf0053\\\",\\\"unExpected\\\":\\\"Err\\\"}\"\n  },\n  {\n    \"title\": \"Execution report\",\n    \"value\": \"UsInf0053\\nUsInf0059  :  2sWNwACzAxEtTqkgfWxQragpMPWq\\nUsInf0060  :  66727-02067-a8fdc-cc6a5-2fc5b-6d3b1-b74ba-ab713\\n\"\n  }\n]",
            "code": "//Add test case variables\naddContext(this, {title: \"Test specific values\", value: JSON.stringify(test)});\n//Set user defined timeout\nthis.timeout(maxTimeOut);\n//Exec node\nvar minerAppExecVersion = child_process.execFileSync(minerApp, [ ...test.args], {stdio: ['pipe', 'pipe', 'pipe'],cwd:\"./\"});\nvar data = minerAppExecVersion.toString();\n//Add return data from execution\naddContext(this, {title: \"Execution report\", value: data});\n//Real tests\nif (test.expected !== '' && data.indexOf(test.expected) === -1) {\n    throw new Error(\"Expected: \" + test.expected);\n}\nif (test.unExpected !== '' && data.indexOf(test.unExpected) !== -1) {\n    throw new Error(\"Unxpected: \" + test.unExpected);\n}\nif (test.specificExec(data) !== true) {\n    throw new Error(`Specific execution failed on ${test.args[0]} with ${\"\\n\" + data}`);\n}",
            "err": {},
            "isRoot": false,
            "uuid": "ccc2a09a-0bde-4ab7-85ad-0949d5dc675e",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Check properly executon of -cCfg",
            "fullTitle": "General functional tests Check properly executon of -cCfg",
            "timedOut": false,
            "duration": 828,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": "[\n  {\n    \"title\": \"Test specific values\",\n    \"value\": \"{\\\"args\\\":[\\\"-cCfg\\\",\\\"Mihail Maldzhanski\\\",\\\"testkey.dkeys\\\",\\\"testCfg\\\"],\\\"expected\\\":\\\"\\\",\\\"unExpected\\\":\\\"Err\\\"}\"\n  },\n  {\n    \"title\": \"Execution report\",\n    \"value\": \"\"\n  }\n]",
            "code": "//Add test case variables\naddContext(this, {title: \"Test specific values\", value: JSON.stringify(test)});\n//Set user defined timeout\nthis.timeout(maxTimeOut);\n//Exec node\nvar minerAppExecVersion = child_process.execFileSync(minerApp, [ ...test.args], {stdio: ['pipe', 'pipe', 'pipe'],cwd:\"./\"});\nvar data = minerAppExecVersion.toString();\n//Add return data from execution\naddContext(this, {title: \"Execution report\", value: data});\n//Real tests\nif (test.expected !== '' && data.indexOf(test.expected) === -1) {\n    throw new Error(\"Expected: \" + test.expected);\n}\nif (test.unExpected !== '' && data.indexOf(test.unExpected) !== -1) {\n    throw new Error(\"Unxpected: \" + test.unExpected);\n}\nif (test.specificExec(data) !== true) {\n    throw new Error(`Specific execution failed on ${test.args[0]} with ${\"\\n\" + data}`);\n}",
            "err": {},
            "isRoot": false,
            "uuid": "6bb218b3-4408-431a-8edd-ba20da2b2525",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Check properly executon of -uCfg",
            "fullTitle": "General functional tests Check properly executon of -uCfg",
            "timedOut": false,
            "duration": 611,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": "[\n  {\n    \"title\": \"Test specific values\",\n    \"value\": \"{\\\"args\\\":[\\\"-uCfg\\\",\\\"Mihail Maldzhanski New\\\",\\\"testkey.dkeys\\\",\\\"testCfg\\\"],\\\"expected\\\":\\\"\\\",\\\"unExpected\\\":\\\"Err\\\"}\"\n  },\n  {\n    \"title\": \"Execution report\",\n    \"value\": \"\"\n  }\n]",
            "code": "//Add test case variables\naddContext(this, {title: \"Test specific values\", value: JSON.stringify(test)});\n//Set user defined timeout\nthis.timeout(maxTimeOut);\n//Exec node\nvar minerAppExecVersion = child_process.execFileSync(minerApp, [ ...test.args], {stdio: ['pipe', 'pipe', 'pipe'],cwd:\"./\"});\nvar data = minerAppExecVersion.toString();\n//Add return data from execution\naddContext(this, {title: \"Execution report\", value: data});\n//Real tests\nif (test.expected !== '' && data.indexOf(test.expected) === -1) {\n    throw new Error(\"Expected: \" + test.expected);\n}\nif (test.unExpected !== '' && data.indexOf(test.unExpected) !== -1) {\n    throw new Error(\"Unxpected: \" + test.unExpected);\n}\nif (test.specificExec(data) !== true) {\n    throw new Error(`Specific execution failed on ${test.args[0]} with ${\"\\n\" + data}`);\n}",
            "err": {},
            "isRoot": false,
            "uuid": "70e92a4f-1d85-45c5-8018-d7b4ae3ae7e9",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Check properly executon of -iCfg",
            "fullTitle": "General functional tests Check properly executon of -iCfg",
            "timedOut": false,
            "duration": 605,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": "[\n  {\n    \"title\": \"Test specific values\",\n    \"value\": \"{\\\"args\\\":[\\\"-iCfg\\\",\\\"../../contactsInit.dbook\\\",\\\"defaultConfig.dconf\\\"],\\\"expected\\\":\\\"\\\",\\\"unExpected\\\":\\\"Err\\\"}\"\n  },\n  {\n    \"title\": \"Execution report\",\n    \"value\": \"\"\n  }\n]",
            "code": "//Add test case variables\naddContext(this, {title: \"Test specific values\", value: JSON.stringify(test)});\n//Set user defined timeout\nthis.timeout(maxTimeOut);\n//Exec node\nvar minerAppExecVersion = child_process.execFileSync(minerApp, [ ...test.args], {stdio: ['pipe', 'pipe', 'pipe'],cwd:\"./\"});\nvar data = minerAppExecVersion.toString();\n//Add return data from execution\naddContext(this, {title: \"Execution report\", value: data});\n//Real tests\nif (test.expected !== '' && data.indexOf(test.expected) === -1) {\n    throw new Error(\"Expected: \" + test.expected);\n}\nif (test.unExpected !== '' && data.indexOf(test.unExpected) !== -1) {\n    throw new Error(\"Unxpected: \" + test.unExpected);\n}\nif (test.specificExec(data) !== true) {\n    throw new Error(`Specific execution failed on ${test.args[0]} with ${\"\\n\" + data}`);\n}",
            "err": {},
            "isRoot": false,
            "uuid": "e3b9be97-b721-44df-bee1-8404c402e4a3",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Check properly executon of -aC",
            "fullTitle": "General functional tests Check properly executon of -aC",
            "timedOut": false,
            "duration": 596,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": "[\n  {\n    \"title\": \"Test specific values\",\n    \"value\": \"{\\\"args\\\":[\\\"-aC\\\",\\\"Tester Name\\\",\\\"3f2b9-2f458-f2066-26c65-ea67c-a6b48-86ced-e9dc6\\\",\\\"defaultConfig.dconf\\\"],\\\"expected\\\":\\\"\\\",\\\"unExpected\\\":\\\"Err\\\"}\"\n  },\n  {\n    \"title\": \"Execution report\",\n    \"value\": \"\"\n  }\n]",
            "code": "//Add test case variables\naddContext(this, {title: \"Test specific values\", value: JSON.stringify(test)});\n//Set user defined timeout\nthis.timeout(maxTimeOut);\n//Exec node\nvar minerAppExecVersion = child_process.execFileSync(minerApp, [ ...test.args], {stdio: ['pipe', 'pipe', 'pipe'],cwd:\"./\"});\nvar data = minerAppExecVersion.toString();\n//Add return data from execution\naddContext(this, {title: \"Execution report\", value: data});\n//Real tests\nif (test.expected !== '' && data.indexOf(test.expected) === -1) {\n    throw new Error(\"Expected: \" + test.expected);\n}\nif (test.unExpected !== '' && data.indexOf(test.unExpected) !== -1) {\n    throw new Error(\"Unxpected: \" + test.unExpected);\n}\nif (test.specificExec(data) !== true) {\n    throw new Error(`Specific execution failed on ${test.args[0]} with ${\"\\n\" + data}`);\n}",
            "err": {},
            "isRoot": false,
            "uuid": "940a2615-7a08-4366-a657-9dff0fb9a73d",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Check properly executon of -aO",
            "fullTitle": "General functional tests Check properly executon of -aO",
            "timedOut": false,
            "duration": 605,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": "[\n  {\n    \"title\": \"Test specific values\",\n    \"value\": \"{\\\"args\\\":[\\\"-aO\\\",\\\"Tester Operator\\\",\\\"3f2b9-2f458-f2066-26c65-ea67c-a6b48-86ced-e9dc6\\\",\\\"defaultConfig.dconf\\\"],\\\"expected\\\":\\\"\\\",\\\"unExpected\\\":\\\"Err\\\"}\"\n  },\n  {\n    \"title\": \"Execution report\",\n    \"value\": \"\"\n  }\n]",
            "code": "//Add test case variables\naddContext(this, {title: \"Test specific values\", value: JSON.stringify(test)});\n//Set user defined timeout\nthis.timeout(maxTimeOut);\n//Exec node\nvar minerAppExecVersion = child_process.execFileSync(minerApp, [ ...test.args], {stdio: ['pipe', 'pipe', 'pipe'],cwd:\"./\"});\nvar data = minerAppExecVersion.toString();\n//Add return data from execution\naddContext(this, {title: \"Execution report\", value: data});\n//Real tests\nif (test.expected !== '' && data.indexOf(test.expected) === -1) {\n    throw new Error(\"Expected: \" + test.expected);\n}\nif (test.unExpected !== '' && data.indexOf(test.unExpected) !== -1) {\n    throw new Error(\"Unxpected: \" + test.unExpected);\n}\nif (test.specificExec(data) !== true) {\n    throw new Error(`Specific execution failed on ${test.args[0]} with ${\"\\n\" + data}`);\n}",
            "err": {},
            "isRoot": false,
            "uuid": "89563fba-4133-48ec-9592-3e2a2d27946d",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Check properly executon of -lO",
            "fullTitle": "General functional tests Check properly executon of -lO",
            "timedOut": false,
            "duration": 609,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": "[\n  {\n    \"title\": \"Test specific values\",\n    \"value\": \"{\\\"args\\\":[\\\"-lO\\\",\\\"defaultConfig.dconf\\\"],\\\"expected\\\":\\\"\\\",\\\"unExpected\\\":\\\"Err\\\"}\"\n  },\n  {\n    \"title\": \"Execution report\",\n    \"value\": \"Name: OpiZero Test Digital Address: d8f54-4fe68-98060-78b6d-bbbf3-1908b-473de-ed2b2 \\nName: DICE Sofia Digital Address: 11f18-19ec1-b4e42-c96de-906fc-86fd6-d64e4-ed409 \\nName: DICE London Digital Address: 58b4b-cfd09-290eb-0ad2f-c6077-c2f0d-fa940-0f4d4 \\nName: Tester Operator Digital Address: 3f2b9-2f458-f2066-26c65-ea67c-a6b48-86ced-e9dc6 \\n\\n\"\n  }\n]",
            "code": "//Add test case variables\naddContext(this, {title: \"Test specific values\", value: JSON.stringify(test)});\n//Set user defined timeout\nthis.timeout(maxTimeOut);\n//Exec node\nvar minerAppExecVersion = child_process.execFileSync(minerApp, [ ...test.args], {stdio: ['pipe', 'pipe', 'pipe'],cwd:\"./\"});\nvar data = minerAppExecVersion.toString();\n//Add return data from execution\naddContext(this, {title: \"Execution report\", value: data});\n//Real tests\nif (test.expected !== '' && data.indexOf(test.expected) === -1) {\n    throw new Error(\"Expected: \" + test.expected);\n}\nif (test.unExpected !== '' && data.indexOf(test.unExpected) !== -1) {\n    throw new Error(\"Unxpected: \" + test.unExpected);\n}\nif (test.specificExec(data) !== true) {\n    throw new Error(`Specific execution failed on ${test.args[0]} with ${\"\\n\" + data}`);\n}",
            "err": {},
            "isRoot": false,
            "uuid": "e48f23ea-b03e-4984-b84c-18257c2b4204",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Check properly executon of -lC",
            "fullTitle": "General functional tests Check properly executon of -lC",
            "timedOut": false,
            "duration": 599,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": "[\n  {\n    \"title\": \"Test specific values\",\n    \"value\": \"{\\\"args\\\":[\\\"-lC\\\",\\\"defaultConfig.dconf\\\"],\\\"expected\\\":\\\"\\\",\\\"unExpected\\\":\\\"Err\\\"}\"\n  },\n  {\n    \"title\": \"Execution report\",\n    \"value\": \"Name: Mihail Maldzhanski Digital Address: f87b0-31850-b97f9-835c9-9cb13-f91ce-43832-8537c \\nName: Konstantin Dimitrov Digital Address: 221fe-81e55-ca8fa-f5518-01201-e4852-934b8-3ecc7 \\nName: Tester Name Digital Address: 3f2b9-2f458-f2066-26c65-ea67c-a6b48-86ced-e9dc6 \\n\\n\"\n  }\n]",
            "code": "//Add test case variables\naddContext(this, {title: \"Test specific values\", value: JSON.stringify(test)});\n//Set user defined timeout\nthis.timeout(maxTimeOut);\n//Exec node\nvar minerAppExecVersion = child_process.execFileSync(minerApp, [ ...test.args], {stdio: ['pipe', 'pipe', 'pipe'],cwd:\"./\"});\nvar data = minerAppExecVersion.toString();\n//Add return data from execution\naddContext(this, {title: \"Execution report\", value: data});\n//Real tests\nif (test.expected !== '' && data.indexOf(test.expected) === -1) {\n    throw new Error(\"Expected: \" + test.expected);\n}\nif (test.unExpected !== '' && data.indexOf(test.unExpected) !== -1) {\n    throw new Error(\"Unxpected: \" + test.unExpected);\n}\nif (test.specificExec(data) !== true) {\n    throw new Error(`Specific execution failed on ${test.args[0]} with ${\"\\n\" + data}`);\n}",
            "err": {},
            "isRoot": false,
            "uuid": "3e9a82db-4064-417b-9df6-d304c529562f",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Check properly executon of -pN",
            "fullTitle": "General functional tests Check properly executon of -pN",
            "timedOut": false,
            "duration": 585,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": "[\n  {\n    \"title\": \"Test specific values\",\n    \"value\": \"{\\\"args\\\":[\\\"-pN\\\",\\\"defaultConfig.dconf\\\"],\\\"expected\\\":\\\"\\\",\\\"unExpected\\\":\\\"Err\\\"}\"\n  },\n  {\n    \"title\": \"Execution report\",\n    \"value\": \"Mihail Maldzhanski New\\n\"\n  }\n]",
            "code": "//Add test case variables\naddContext(this, {title: \"Test specific values\", value: JSON.stringify(test)});\n//Set user defined timeout\nthis.timeout(maxTimeOut);\n//Exec node\nvar minerAppExecVersion = child_process.execFileSync(minerApp, [ ...test.args], {stdio: ['pipe', 'pipe', 'pipe'],cwd:\"./\"});\nvar data = minerAppExecVersion.toString();\n//Add return data from execution\naddContext(this, {title: \"Execution report\", value: data});\n//Real tests\nif (test.expected !== '' && data.indexOf(test.expected) === -1) {\n    throw new Error(\"Expected: \" + test.expected);\n}\nif (test.unExpected !== '' && data.indexOf(test.unExpected) !== -1) {\n    throw new Error(\"Unxpected: \" + test.unExpected);\n}\nif (test.specificExec(data) !== true) {\n    throw new Error(`Specific execution failed on ${test.args[0]} with ${\"\\n\" + data}`);\n}",
            "err": {},
            "isRoot": false,
            "uuid": "91410975-9d2f-4c57-b625-3ce346d0afb2",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Check properly executon of -pD",
            "fullTitle": "General functional tests Check properly executon of -pD",
            "timedOut": false,
            "duration": 583,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": "[\n  {\n    \"title\": \"Test specific values\",\n    \"value\": \"{\\\"args\\\":[\\\"-pD\\\",\\\"defaultConfig.dconf\\\"],\\\"expected\\\":\\\"\\\",\\\"unExpected\\\":\\\"Err\\\"}\"\n  },\n  {\n    \"title\": \"Execution report\",\n    \"value\": \"66727-02067-a8fdc-cc6a5-2fc5b-6d3b1-b74ba-ab713\\n\"\n  }\n]",
            "code": "//Add test case variables\naddContext(this, {title: \"Test specific values\", value: JSON.stringify(test)});\n//Set user defined timeout\nthis.timeout(maxTimeOut);\n//Exec node\nvar minerAppExecVersion = child_process.execFileSync(minerApp, [ ...test.args], {stdio: ['pipe', 'pipe', 'pipe'],cwd:\"./\"});\nvar data = minerAppExecVersion.toString();\n//Add return data from execution\naddContext(this, {title: \"Execution report\", value: data});\n//Real tests\nif (test.expected !== '' && data.indexOf(test.expected) === -1) {\n    throw new Error(\"Expected: \" + test.expected);\n}\nif (test.unExpected !== '' && data.indexOf(test.unExpected) !== -1) {\n    throw new Error(\"Unxpected: \" + test.unExpected);\n}\nif (test.specificExec(data) !== true) {\n    throw new Error(`Specific execution failed on ${test.args[0]} with ${\"\\n\" + data}`);\n}",
            "err": {},
            "isRoot": false,
            "uuid": "8851f64d-9ab0-4627-88fa-ddb114c1ca14",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Check properly executon of -eAc",
            "fullTitle": "General functional tests Check properly executon of -eAc",
            "timedOut": false,
            "duration": 596,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": "[\n  {\n    \"title\": \"Test specific values\",\n    \"value\": \"{\\\"args\\\":[\\\"-eAc\\\",\\\"exportedContacts\\\"],\\\"expected\\\":\\\"\\\",\\\"unExpected\\\":\\\"Err\\\"}\"\n  },\n  {\n    \"title\": \"Execution report\",\n    \"value\": \"\"\n  }\n]",
            "code": "//Add test case variables\naddContext(this, {title: \"Test specific values\", value: JSON.stringify(test)});\n//Set user defined timeout\nthis.timeout(maxTimeOut);\n//Exec node\nvar minerAppExecVersion = child_process.execFileSync(minerApp, [ ...test.args], {stdio: ['pipe', 'pipe', 'pipe'],cwd:\"./\"});\nvar data = minerAppExecVersion.toString();\n//Add return data from execution\naddContext(this, {title: \"Execution report\", value: data});\n//Real tests\nif (test.expected !== '' && data.indexOf(test.expected) === -1) {\n    throw new Error(\"Expected: \" + test.expected);\n}\nif (test.unExpected !== '' && data.indexOf(test.unExpected) !== -1) {\n    throw new Error(\"Unxpected: \" + test.unExpected);\n}\nif (test.specificExec(data) !== true) {\n    throw new Error(`Specific execution failed on ${test.args[0]} with ${\"\\n\" + data}`);\n}",
            "err": {},
            "isRoot": false,
            "uuid": "d62ac011-f44a-4c61-a213-2c9162bb51c0",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Check properly executon of -eAo",
            "fullTitle": "General functional tests Check properly executon of -eAo",
            "timedOut": false,
            "duration": 578,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": "[\n  {\n    \"title\": \"Test specific values\",\n    \"value\": \"{\\\"args\\\":[\\\"-eAo\\\",\\\"exportedOperators\\\"],\\\"expected\\\":\\\"\\\",\\\"unExpected\\\":\\\"Err\\\"}\"\n  },\n  {\n    \"title\": \"Execution report\",\n    \"value\": \"\"\n  }\n]",
            "code": "//Add test case variables\naddContext(this, {title: \"Test specific values\", value: JSON.stringify(test)});\n//Set user defined timeout\nthis.timeout(maxTimeOut);\n//Exec node\nvar minerAppExecVersion = child_process.execFileSync(minerApp, [ ...test.args], {stdio: ['pipe', 'pipe', 'pipe'],cwd:\"./\"});\nvar data = minerAppExecVersion.toString();\n//Add return data from execution\naddContext(this, {title: \"Execution report\", value: data});\n//Real tests\nif (test.expected !== '' && data.indexOf(test.expected) === -1) {\n    throw new Error(\"Expected: \" + test.expected);\n}\nif (test.unExpected !== '' && data.indexOf(test.unExpected) !== -1) {\n    throw new Error(\"Unxpected: \" + test.unExpected);\n}\nif (test.specificExec(data) !== true) {\n    throw new Error(`Specific execution failed on ${test.args[0]} with ${\"\\n\" + data}`);\n}",
            "err": {},
            "isRoot": false,
            "uuid": "5e30234c-b608-4ee1-8e63-a54ec51f56d1",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Check properly executon of -eK",
            "fullTitle": "General functional tests Check properly executon of -eK",
            "timedOut": false,
            "duration": 616,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": "[\n  {\n    \"title\": \"Test specific values\",\n    \"value\": \"{\\\"args\\\":[\\\"-eK\\\",\\\"exportedKeys\\\"],\\\"expected\\\":\\\"\\\",\\\"unExpected\\\":\\\"Err\\\"}\"\n  },\n  {\n    \"title\": \"Execution report\",\n    \"value\": \"\"\n  }\n]",
            "code": "//Add test case variables\naddContext(this, {title: \"Test specific values\", value: JSON.stringify(test)});\n//Set user defined timeout\nthis.timeout(maxTimeOut);\n//Exec node\nvar minerAppExecVersion = child_process.execFileSync(minerApp, [ ...test.args], {stdio: ['pipe', 'pipe', 'pipe'],cwd:\"./\"});\nvar data = minerAppExecVersion.toString();\n//Add return data from execution\naddContext(this, {title: \"Execution report\", value: data});\n//Real tests\nif (test.expected !== '' && data.indexOf(test.expected) === -1) {\n    throw new Error(\"Expected: \" + test.expected);\n}\nif (test.unExpected !== '' && data.indexOf(test.unExpected) !== -1) {\n    throw new Error(\"Unxpected: \" + test.unExpected);\n}\nif (test.specificExec(data) !== true) {\n    throw new Error(`Specific execution failed on ${test.args[0]} with ${\"\\n\" + data}`);\n}",
            "err": {},
            "isRoot": false,
            "uuid": "9e24022a-ae18-46fc-97a0-0bf3d7087905",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Check properly executon of -cc",
            "fullTitle": "General functional tests Check properly executon of -cc",
            "timedOut": false,
            "duration": 1693,
            "state": "failed",
            "pass": false,
            "fail": true,
            "pending": false,
            "context": "[\n  {\n    \"title\": \"Test specific values\",\n    \"value\": \"{\\\"args\\\":[\\\"-cc\\\",\\\"./units/testUnit\\\",\\\"76640-bcfe5-47604-75a2e-c0a6c-90df2-c39ef-97718\\\"],\\\"expected\\\":\\\"UsInf0073\\\",\\\"unExpected\\\":\\\"Err\\\"}\"\n  },\n  {\n    \"title\": \"Execution report\",\n    \"value\": \"Err0001\\nWarn0021\\nUsInf0054\\n\"\n  }\n]",
            "code": "//Add test case variables\naddContext(this, {title: \"Test specific values\", value: JSON.stringify(test)});\n//Set user defined timeout\nthis.timeout(maxTimeOut);\n//Exec node\nvar minerAppExecVersion = child_process.execFileSync(minerApp, [ ...test.args], {stdio: ['pipe', 'pipe', 'pipe'],cwd:\"./\"});\nvar data = minerAppExecVersion.toString();\n//Add return data from execution\naddContext(this, {title: \"Execution report\", value: data});\n//Real tests\nif (test.expected !== '' && data.indexOf(test.expected) === -1) {\n    throw new Error(\"Expected: \" + test.expected);\n}\nif (test.unExpected !== '' && data.indexOf(test.unExpected) !== -1) {\n    throw new Error(\"Unxpected: \" + test.unExpected);\n}\nif (test.specificExec(data) !== true) {\n    throw new Error(`Specific execution failed on ${test.args[0]} with ${\"\\n\" + data}`);\n}",
            "err": {
              "message": "Error: Expected: UsInf0073",
              "estack": "Error: Expected: UsInf0073\n    at Context.<anonymous> (generalTestBinary.js:204:23)"
            },
            "isRoot": false,
            "uuid": "b82a5818-0cfd-435b-af00-74fc7ac9f9cf",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Check properly executon of -v",
            "fullTitle": "General functional tests Check properly executon of -v",
            "timedOut": false,
            "duration": 653,
            "state": "failed",
            "pass": false,
            "fail": true,
            "pending": false,
            "context": "{\n  \"title\": \"Test specific values\",\n  \"value\": \"{\\\"args\\\":[\\\"-v\\\",\\\"./units/testUnit.dice\\\"],\\\"expected\\\":\\\"\\\",\\\"unExpected\\\":\\\"Err\\\"}\"\n}",
            "code": "//Add test case variables\naddContext(this, {title: \"Test specific values\", value: JSON.stringify(test)});\n//Set user defined timeout\nthis.timeout(maxTimeOut);\n//Exec node\nvar minerAppExecVersion = child_process.execFileSync(minerApp, [ ...test.args], {stdio: ['pipe', 'pipe', 'pipe'],cwd:\"./\"});\nvar data = minerAppExecVersion.toString();\n//Add return data from execution\naddContext(this, {title: \"Execution report\", value: data});\n//Real tests\nif (test.expected !== '' && data.indexOf(test.expected) === -1) {\n    throw new Error(\"Expected: \" + test.expected);\n}\nif (test.unExpected !== '' && data.indexOf(test.unExpected) !== -1) {\n    throw new Error(\"Unxpected: \" + test.unExpected);\n}\nif (test.specificExec(data) !== true) {\n    throw new Error(`Specific execution failed on ${test.args[0]} with ${\"\\n\" + data}`);\n}",
            "err": {
              "message": "Error: Command failed: ../../../../obf/BUILD/Miner_Build/Win/Miner.exe -v ./units/testUnit.dice\nfs.js:646\r\n  return binding.open(pathModule._makeLong(path), stringToFlags(flags), mode);\r\n                 ^\r\n\r\nError: ENOENT: no such file or directory, open 'C:\\Development\\NodeJS\\EncryptionNodeJS_Git\\Apps\\Miner\\test\\functional-test\\units\\testUnit.dice'\r\n    at Object.fs.openSync (fs.js:646:18)\r\n    at Object.fs.readFileSync (fs.js:551:33)\r\n    at printDiceUnitFromBS58 (C:\\Development\\NodeJS\\EncryptionNodeJS_Git\\obf\\BUILD\\Miner_Build\\Win\\Miner.exe:44:20207)\r\n    at Object.funcValidate (C:\\Development\\NodeJS\\EncryptionNodeJS_Git\\obf\\BUILD\\Miner_Build\\Win\\Miner.exe:44:5208)\r\n    at Number.<anonymous> (C:\\Development\\NodeJS\\EncryptionNodeJS_Git\\obf\\BUILD\\Miner_Build\\Win\\Miner.exe:44:14866)\r\n    at c (C:\\Development\\NodeJS\\EncryptionNodeJS_Git\\obf\\BUILD\\Miner_Build\\Win\\Miner.exe:16846:3333)\r\n    at Function.r.import (C:\\Development\\NodeJS\\EncryptionNodeJS_Git\\obf\\BUILD\\Miner_Build\\Win\\Miner.exe:16846:3857)\r\n    at d (C:\\Development\\NodeJS\\EncryptionNodeJS_Git\\obf\\BUILD\\Miner_Build\\Win\\Miner.exe:16843:15)\r\n    at Object.<anonymous> (C:\\Development\\NodeJS\\EncryptionNodeJS_Git\\obf\\BUILD\\Miner_Build\\Win\\Miner.exe:16846:1)\r\n    at Module._compile (module.js:635:30)\r\n",
              "estack": "Error: Command failed: ../../../../obf/BUILD/Miner_Build/Win/Miner.exe -v ./units/testUnit.dice\nfs.js:646\r\n  return binding.open(pathModule._makeLong(path), stringToFlags(flags), mode);\r\n                 ^\r\n\r\nError: ENOENT: no such file or directory, open 'C:\\Development\\NodeJS\\EncryptionNodeJS_Git\\Apps\\Miner\\test\\functional-test\\units\\testUnit.dice'\r\n    at Object.fs.openSync (fs.js:646:18)\r\n    at Object.fs.readFileSync (fs.js:551:33)\r\n    at printDiceUnitFromBS58 (C:\\Development\\NodeJS\\EncryptionNodeJS_Git\\obf\\BUILD\\Miner_Build\\Win\\Miner.exe:44:20207)\r\n    at Object.funcValidate (C:\\Development\\NodeJS\\EncryptionNodeJS_Git\\obf\\BUILD\\Miner_Build\\Win\\Miner.exe:44:5208)\r\n    at Number.<anonymous> (C:\\Development\\NodeJS\\EncryptionNodeJS_Git\\obf\\BUILD\\Miner_Build\\Win\\Miner.exe:44:14866)\r\n    at c (C:\\Development\\NodeJS\\EncryptionNodeJS_Git\\obf\\BUILD\\Miner_Build\\Win\\Miner.exe:16846:3333)\r\n    at Function.r.import (C:\\Development\\NodeJS\\EncryptionNodeJS_Git\\obf\\BUILD\\Miner_Build\\Win\\Miner.exe:16846:3857)\r\n    at d (C:\\Development\\NodeJS\\EncryptionNodeJS_Git\\obf\\BUILD\\Miner_Build\\Win\\Miner.exe:16843:15)\r\n    at Object.<anonymous> (C:\\Development\\NodeJS\\EncryptionNodeJS_Git\\obf\\BUILD\\Miner_Build\\Win\\Miner.exe:16846:1)\r\n\n    at checkExecSyncError (child_process.js:601:13)\n    at Object.execFileSync (child_process.js:621:13)\n    at Context.<anonymous> (generalTestBinary.js:196:53)"
            },
            "isRoot": false,
            "uuid": "dfc7db7e-c2f5-4369-9249-97cbf0a2e2ba",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Check properly executon of -to",
            "fullTitle": "General functional tests Check properly executon of -to",
            "timedOut": false,
            "duration": 606,
            "state": "failed",
            "pass": false,
            "fail": true,
            "pending": false,
            "context": "{\n  \"title\": \"Test specific values\",\n  \"value\": \"{\\\"args\\\":[\\\"-to\\\",\\\"./units/testUnit.dice\\\"],\\\"expected\\\":\\\"UsInf0075\\\",\\\"unExpected\\\":\\\"Err\\\"}\"\n}",
            "code": "//Add test case variables\naddContext(this, {title: \"Test specific values\", value: JSON.stringify(test)});\n//Set user defined timeout\nthis.timeout(maxTimeOut);\n//Exec node\nvar minerAppExecVersion = child_process.execFileSync(minerApp, [ ...test.args], {stdio: ['pipe', 'pipe', 'pipe'],cwd:\"./\"});\nvar data = minerAppExecVersion.toString();\n//Add return data from execution\naddContext(this, {title: \"Execution report\", value: data});\n//Real tests\nif (test.expected !== '' && data.indexOf(test.expected) === -1) {\n    throw new Error(\"Expected: \" + test.expected);\n}\nif (test.unExpected !== '' && data.indexOf(test.unExpected) !== -1) {\n    throw new Error(\"Unxpected: \" + test.unExpected);\n}\nif (test.specificExec(data) !== true) {\n    throw new Error(`Specific execution failed on ${test.args[0]} with ${\"\\n\" + data}`);\n}",
            "err": {
              "message": "Error: Command failed: ../../../../obf/BUILD/Miner_Build/Win/Miner.exe -to ./units/testUnit.dice\nfs.js:646\r\n  return binding.open(pathModule._makeLong(path), stringToFlags(flags), mode);\r\n                 ^\r\n\r\nError: ENOENT: no such file or directory, open 'C:\\Development\\NodeJS\\EncryptionNodeJS_Git\\Apps\\Miner\\test\\functional-test\\units\\testUnit.dice'\r\n    at Object.fs.openSync (fs.js:646:18)\r\n    at Object.fs.readFileSync (fs.js:551:33)\r\n    at Timeout._0x34bf8b [as _onTimeout] (C:\\Development\\NodeJS\\EncryptionNodeJS_Git\\obf\\BUILD\\Miner_Build\\Win\\Miner.exe:44:6955)\r\n    at ontimeout (timers.js:475:11)\r\n    at tryOnTimeout (timers.js:310:5)\r\n    at Timer.listOnTimeout (timers.js:270:5)\r\n",
              "estack": "Error: Command failed: ../../../../obf/BUILD/Miner_Build/Win/Miner.exe -to ./units/testUnit.dice\nfs.js:646\r\n  return binding.open(pathModule._makeLong(path), stringToFlags(flags), mode);\r\n                 ^\r\n\r\nError: ENOENT: no such file or directory, open 'C:\\Development\\NodeJS\\EncryptionNodeJS_Git\\Apps\\Miner\\test\\functional-test\\units\\testUnit.dice'\r\n    at Object.fs.openSync (fs.js:646:18)\r\n    at Object.fs.readFileSync (fs.js:551:33)\r\n    at Timeout._0x34bf8b [as _onTimeout] (C:\\Development\\NodeJS\\EncryptionNodeJS_Git\\obf\\BUILD\\Miner_Build\\Win\\Miner.exe:44:6955)\r\n\n    at checkExecSyncError (child_process.js:601:13)\n    at Object.execFileSync (child_process.js:621:13)\n    at Context.<anonymous> (generalTestBinary.js:196:53)"
            },
            "isRoot": false,
            "uuid": "3685c9d4-249c-49ea-affe-a83557800153",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Check properly executon of -r",
            "fullTitle": "General functional tests Check properly executon of -r",
            "timedOut": false,
            "duration": 631,
            "state": "failed",
            "pass": false,
            "fail": true,
            "pending": false,
            "context": "{\n  \"title\": \"Test specific values\",\n  \"value\": \"{\\\"args\\\":[\\\"-r\\\",\\\"./units/testUnit.dice\\\"],\\\"expected\\\":\\\"Warn0028\\\",\\\"unExpected\\\":\\\"Err\\\"}\"\n}",
            "code": "//Add test case variables\naddContext(this, {title: \"Test specific values\", value: JSON.stringify(test)});\n//Set user defined timeout\nthis.timeout(maxTimeOut);\n//Exec node\nvar minerAppExecVersion = child_process.execFileSync(minerApp, [ ...test.args], {stdio: ['pipe', 'pipe', 'pipe'],cwd:\"./\"});\nvar data = minerAppExecVersion.toString();\n//Add return data from execution\naddContext(this, {title: \"Execution report\", value: data});\n//Real tests\nif (test.expected !== '' && data.indexOf(test.expected) === -1) {\n    throw new Error(\"Expected: \" + test.expected);\n}\nif (test.unExpected !== '' && data.indexOf(test.unExpected) !== -1) {\n    throw new Error(\"Unxpected: \" + test.unExpected);\n}\nif (test.specificExec(data) !== true) {\n    throw new Error(`Specific execution failed on ${test.args[0]} with ${\"\\n\" + data}`);\n}",
            "err": {
              "message": "Error: Command failed: ../../../../obf/BUILD/Miner_Build/Win/Miner.exe -r ./units/testUnit.dice\nfs.js:646\r\n  return binding.open(pathModule._makeLong(path), stringToFlags(flags), mode);\r\n                 ^\r\n\r\nError: ENOENT: no such file or directory, open 'C:\\Development\\NodeJS\\EncryptionNodeJS_Git\\Apps\\Miner\\test\\functional-test\\units\\testUnit.dice'\r\n    at Object.fs.openSync (fs.js:646:18)\r\n    at Object.fs.readFileSync (fs.js:551:33)\r\n    at Object.funcRegister (C:\\Development\\NodeJS\\EncryptionNodeJS_Git\\obf\\BUILD\\Miner_Build\\Win\\Miner.exe:44:11497)\r\n    at Number.<anonymous> (C:\\Development\\NodeJS\\EncryptionNodeJS_Git\\obf\\BUILD\\Miner_Build\\Win\\Miner.exe:44:14866)\r\n    at c (C:\\Development\\NodeJS\\EncryptionNodeJS_Git\\obf\\BUILD\\Miner_Build\\Win\\Miner.exe:16846:3333)\r\n    at Function.r.import (C:\\Development\\NodeJS\\EncryptionNodeJS_Git\\obf\\BUILD\\Miner_Build\\Win\\Miner.exe:16846:3857)\r\n    at d (C:\\Development\\NodeJS\\EncryptionNodeJS_Git\\obf\\BUILD\\Miner_Build\\Win\\Miner.exe:16843:15)\r\n    at Object.<anonymous> (C:\\Development\\NodeJS\\EncryptionNodeJS_Git\\obf\\BUILD\\Miner_Build\\Win\\Miner.exe:16846:1)\r\n    at Module._compile (module.js:635:30)\r\n    at _third_party_main.js:45:20\r\n",
              "estack": "Error: Command failed: ../../../../obf/BUILD/Miner_Build/Win/Miner.exe -r ./units/testUnit.dice\nfs.js:646\r\n  return binding.open(pathModule._makeLong(path), stringToFlags(flags), mode);\r\n                 ^\r\n\r\nError: ENOENT: no such file or directory, open 'C:\\Development\\NodeJS\\EncryptionNodeJS_Git\\Apps\\Miner\\test\\functional-test\\units\\testUnit.dice'\r\n    at Object.fs.openSync (fs.js:646:18)\r\n    at Object.fs.readFileSync (fs.js:551:33)\r\n    at Object.funcRegister (C:\\Development\\NodeJS\\EncryptionNodeJS_Git\\obf\\BUILD\\Miner_Build\\Win\\Miner.exe:44:11497)\r\n    at Number.<anonymous> (C:\\Development\\NodeJS\\EncryptionNodeJS_Git\\obf\\BUILD\\Miner_Build\\Win\\Miner.exe:44:14866)\r\n    at c (C:\\Development\\NodeJS\\EncryptionNodeJS_Git\\obf\\BUILD\\Miner_Build\\Win\\Miner.exe:16846:3333)\r\n    at Function.r.import (C:\\Development\\NodeJS\\EncryptionNodeJS_Git\\obf\\BUILD\\Miner_Build\\Win\\Miner.exe:16846:3857)\r\n    at d (C:\\Development\\NodeJS\\EncryptionNodeJS_Git\\obf\\BUILD\\Miner_Build\\Win\\Miner.exe:16843:15)\r\n    at Object.<anonymous> (C:\\Development\\NodeJS\\EncryptionNodeJS_Git\\obf\\BUILD\\Miner_Build\\Win\\Miner.exe:16846:1)\r\n    at _third_party_main.js:45:20\r\n\n    at checkExecSyncError (child_process.js:601:13)\n    at Object.execFileSync (child_process.js:621:13)\n    at Context.<anonymous> (generalTestBinary.js:196:53)"
            },
            "isRoot": false,
            "uuid": "3457a91f-57c5-4165-8497-f34d05cbecbf",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Check properly executon of -tn",
            "fullTitle": "General functional tests Check properly executon of -tn",
            "timedOut": false,
            "duration": 675,
            "state": "failed",
            "pass": false,
            "fail": true,
            "pending": false,
            "context": "{\n  \"title\": \"Test specific values\",\n  \"value\": \"{\\\"args\\\":[\\\"-tn\\\",\\\"./units/testUnit.dice\\\",\\\"./units/testUnit.dice\\\"],\\\"expected\\\":\\\"UsInf0076\\\",\\\"unExpected\\\":\\\"Err\\\"}\"\n}",
            "code": "//Add test case variables\naddContext(this, {title: \"Test specific values\", value: JSON.stringify(test)});\n//Set user defined timeout\nthis.timeout(maxTimeOut);\n//Exec node\nvar minerAppExecVersion = child_process.execFileSync(minerApp, [ ...test.args], {stdio: ['pipe', 'pipe', 'pipe'],cwd:\"./\"});\nvar data = minerAppExecVersion.toString();\n//Add return data from execution\naddContext(this, {title: \"Execution report\", value: data});\n//Real tests\nif (test.expected !== '' && data.indexOf(test.expected) === -1) {\n    throw new Error(\"Expected: \" + test.expected);\n}\nif (test.unExpected !== '' && data.indexOf(test.unExpected) !== -1) {\n    throw new Error(\"Unxpected: \" + test.unExpected);\n}\nif (test.specificExec(data) !== true) {\n    throw new Error(`Specific execution failed on ${test.args[0]} with ${\"\\n\" + data}`);\n}",
            "err": {
              "message": "Error: Command failed: ../../../../obf/BUILD/Miner_Build/Win/Miner.exe -tn ./units/testUnit.dice ./units/testUnit.dice\nfs.js:646\r\n  return binding.open(pathModule._makeLong(path), stringToFlags(flags), mode);\r\n                 ^\r\n\r\nError: ENOENT: no such file or directory, open 'C:\\Development\\NodeJS\\EncryptionNodeJS_Git\\Apps\\Miner\\test\\functional-test\\units\\testUnit.dice'\r\n    at Object.fs.openSync (fs.js:646:18)\r\n    at Object.fs.readFileSync (fs.js:551:33)\r\n    at Timeout._0x2ec943 [as _onTimeout] (C:\\Development\\NodeJS\\EncryptionNodeJS_Git\\obf\\BUILD\\Miner_Build\\Win\\Miner.exe:44:9936)\r\n    at ontimeout (timers.js:475:11)\r\n    at tryOnTimeout (timers.js:310:5)\r\n    at Timer.listOnTimeout (timers.js:270:5)\r\n",
              "estack": "Error: Command failed: ../../../../obf/BUILD/Miner_Build/Win/Miner.exe -tn ./units/testUnit.dice ./units/testUnit.dice\nfs.js:646\r\n  return binding.open(pathModule._makeLong(path), stringToFlags(flags), mode);\r\n                 ^\r\n\r\nError: ENOENT: no such file or directory, open 'C:\\Development\\NodeJS\\EncryptionNodeJS_Git\\Apps\\Miner\\test\\functional-test\\units\\testUnit.dice'\r\n    at Object.fs.openSync (fs.js:646:18)\r\n    at Object.fs.readFileSync (fs.js:551:33)\r\n    at Timeout._0x2ec943 [as _onTimeout] (C:\\Development\\NodeJS\\EncryptionNodeJS_Git\\obf\\BUILD\\Miner_Build\\Win\\Miner.exe:44:9936)\r\n\n    at checkExecSyncError (child_process.js:601:13)\n    at Object.execFileSync (child_process.js:621:13)\n    at Context.<anonymous> (generalTestBinary.js:196:53)"
            },
            "isRoot": false,
            "uuid": "d55458fb-c056-404a-928b-4d43e4e72e23",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Check properly executon of -b",
            "fullTitle": "General functional tests Check properly executon of -b",
            "timedOut": false,
            "duration": 633,
            "state": "failed",
            "pass": false,
            "fail": true,
            "pending": false,
            "context": "{\n  \"title\": \"Test specific values\",\n  \"value\": \"{\\\"args\\\":[\\\"-b\\\",\\\"./units/\\\"],\\\"expected\\\":\\\"\\\",\\\"unExpected\\\":\\\"Err\\\"}\"\n}",
            "code": "//Add test case variables\naddContext(this, {title: \"Test specific values\", value: JSON.stringify(test)});\n//Set user defined timeout\nthis.timeout(maxTimeOut);\n//Exec node\nvar minerAppExecVersion = child_process.execFileSync(minerApp, [ ...test.args], {stdio: ['pipe', 'pipe', 'pipe'],cwd:\"./\"});\nvar data = minerAppExecVersion.toString();\n//Add return data from execution\naddContext(this, {title: \"Execution report\", value: data});\n//Real tests\nif (test.expected !== '' && data.indexOf(test.expected) === -1) {\n    throw new Error(\"Expected: \" + test.expected);\n}\nif (test.unExpected !== '' && data.indexOf(test.unExpected) !== -1) {\n    throw new Error(\"Unxpected: \" + test.unExpected);\n}\nif (test.specificExec(data) !== true) {\n    throw new Error(`Specific execution failed on ${test.args[0]} with ${\"\\n\" + data}`);\n}",
            "err": {
              "message": "Error: Command failed: ../../../../obf/BUILD/Miner_Build/Win/Miner.exe -b ./units/\nC:\\Development\\NodeJS\\EncryptionNodeJS_Git\\obf\\BUILD\\Miner_Build\\Win\\Miner.exe:44\r\nvar DICE=new modDICEUnit();var DICEScrap=new modDICEUnit();var DICEProto=new modDICEPrototype();var DiceCalculatorL=new modDICECalculator('js');var DNS=new modDNSBinder();var AddressGen=new modDigAddress();var TCPClient=new modTCPWorker();var DICEValue=new modDICEValue(DiceCalculatorL);var Time=new Date();var Bs58=new modBase58();var CommandParser=new modCommandParser(process[a4_0x50ad('0x0')],exConfig[a4_0x50ad('0x1')]);var isRequestTransmitted=![];var currentState=CommandParser[a4_0x50ad('0x2')]();var keyPair={};var scheduler_10ms=undefined;var zeroes=undefined;var globalTh=undefined;var encryptor=undefined;var view_console=new modVIEW(exConfig[a4_0x50ad('0x3')][a4_0x50ad('0x4')],exConfig[a4_0x50ad('0x3')][a4_0x50ad('0x5')],exConfig['minerViewOut']);view_console[a4_0x50ad('0x6')](exConfig[a4_0x50ad('0x7')]);var isCudaReq=![];var securityCounter=0x0;var isTcpReady=![];var isDnsHttpRequested=![];var diceScrapFuncHandlers=undef\r\n\r\nTypeError: Cannot read property 'op' of undefined\r\n    at Timeout._0xefbb53 [as _onTimeout] (C:\\Development\\NodeJS\\EncryptionNodeJS_Git\\obf\\BUILD\\Miner_Build\\Win\\Miner.exe:44:26878)\r\n    at ontimeout (timers.js:475:11)\r\n    at tryOnTimeout (timers.js:310:5)\r\n    at Timer.listOnTimeout (timers.js:270:5)\r\n",
              "estack": "Error: Command failed: ../../../../obf/BUILD/Miner_Build/Win/Miner.exe -b ./units/\nC:\\Development\\NodeJS\\EncryptionNodeJS_Git\\obf\\BUILD\\Miner_Build\\Win\\Miner.exe:44\r\nvar DICE=new modDICEUnit();var DICEScrap=new modDICEUnit();var DICEProto=new modDICEPrototype();var DiceCalculatorL=new modDICECalculator('js');var DNS=new modDNSBinder();var AddressGen=new modDigAddress();var TCPClient=new modTCPWorker();var DICEValue=new modDICEValue(DiceCalculatorL);var Time=new Date();var Bs58=new modBase58();var CommandParser=new modCommandParser(process[a4_0x50ad('0x0')],exConfig[a4_0x50ad('0x1')]);var isRequestTransmitted=![];var currentState=CommandParser[a4_0x50ad('0x2')]();var keyPair={};var scheduler_10ms=undefined;var zeroes=undefined;var globalTh=undefined;var encryptor=undefined;var view_console=new modVIEW(exConfig[a4_0x50ad('0x3')][a4_0x50ad('0x4')],exConfig[a4_0x50ad('0x3')][a4_0x50ad('0x5')],exConfig['minerViewOut']);view_console[a4_0x50ad('0x6')](exConfig[a4_0x50ad('0x7')]);var isCudaReq=![];var securityCounter=0x0;var isTcpReady=![];var isDnsHttpRequested=![];var diceScrapFuncHandlers=undef\r\n\r\nTypeError: Cannot read property 'op' of undefined\r\n    at Timeout._0xefbb53 [as _onTimeout] (C:\\Development\\NodeJS\\EncryptionNodeJS_Git\\obf\\BUILD\\Miner_Build\\Win\\Miner.exe:44:26878)\r\n\n    at checkExecSyncError (child_process.js:601:13)\n    at Object.execFileSync (child_process.js:621:13)\n    at Context.<anonymous> (generalTestBinary.js:196:53)"
            },
            "isRoot": false,
            "uuid": "af01e4c3-05b7-46c0-9d04-a518e15609ee",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Check properly executon of -lU",
            "fullTitle": "General functional tests Check properly executon of -lU",
            "timedOut": false,
            "duration": 637,
            "state": "failed",
            "pass": false,
            "fail": true,
            "pending": false,
            "context": "{\n  \"title\": \"Test specific values\",\n  \"value\": \"{\\\"args\\\":[\\\"-lU\\\",\\\"./units/\\\"],\\\"expected\\\":\\\"\\\",\\\"unExpected\\\":\\\"Err\\\"}\"\n}",
            "code": "//Add test case variables\naddContext(this, {title: \"Test specific values\", value: JSON.stringify(test)});\n//Set user defined timeout\nthis.timeout(maxTimeOut);\n//Exec node\nvar minerAppExecVersion = child_process.execFileSync(minerApp, [ ...test.args], {stdio: ['pipe', 'pipe', 'pipe'],cwd:\"./\"});\nvar data = minerAppExecVersion.toString();\n//Add return data from execution\naddContext(this, {title: \"Execution report\", value: data});\n//Real tests\nif (test.expected !== '' && data.indexOf(test.expected) === -1) {\n    throw new Error(\"Expected: \" + test.expected);\n}\nif (test.unExpected !== '' && data.indexOf(test.unExpected) !== -1) {\n    throw new Error(\"Unxpected: \" + test.unExpected);\n}\nif (test.specificExec(data) !== true) {\n    throw new Error(`Specific execution failed on ${test.args[0]} with ${\"\\n\" + data}`);\n}",
            "err": {
              "message": "Error: Command failed: ../../../../obf/BUILD/Miner_Build/Win/Miner.exe -lU ./units/\nC:\\Development\\NodeJS\\EncryptionNodeJS_Git\\obf\\BUILD\\Miner_Build\\Win\\Miner.exe:44\r\nvar DICE=new modDICEUnit();var DICEScrap=new modDICEUnit();var DICEProto=new modDICEPrototype();var DiceCalculatorL=new modDICECalculator('js');var DNS=new modDNSBinder();var AddressGen=new modDigAddress();var TCPClient=new modTCPWorker();var DICEValue=new modDICEValue(DiceCalculatorL);var Time=new Date();var Bs58=new modBase58();var CommandParser=new modCommandParser(process[a4_0x50ad('0x0')],exConfig[a4_0x50ad('0x1')]);var isRequestTransmitted=![];var currentState=CommandParser[a4_0x50ad('0x2')]();var keyPair={};var scheduler_10ms=undefined;var zeroes=undefined;var globalTh=undefined;var encryptor=undefined;var view_console=new modVIEW(exConfig[a4_0x50ad('0x3')][a4_0x50ad('0x4')],exConfig[a4_0x50ad('0x3')][a4_0x50ad('0x5')],exConfig['minerViewOut']);view_console[a4_0x50ad('0x6')](exConfig[a4_0x50ad('0x7')]);var isCudaReq=![];var securityCounter=0x0;var isTcpReady=![];var isDnsHttpRequested=![];var diceScrapFuncHandlers=undef\r\n\r\nTypeError: Cannot read property 'op' of undefined\r\n    at Timeout._0x14092a [as _onTimeout] (C:\\Development\\NodeJS\\EncryptionNodeJS_Git\\obf\\BUILD\\Miner_Build\\Win\\Miner.exe:44:31566)\r\n    at ontimeout (timers.js:475:11)\r\n    at tryOnTimeout (timers.js:310:5)\r\n    at Timer.listOnTimeout (timers.js:270:5)\r\n",
              "estack": "Error: Command failed: ../../../../obf/BUILD/Miner_Build/Win/Miner.exe -lU ./units/\nC:\\Development\\NodeJS\\EncryptionNodeJS_Git\\obf\\BUILD\\Miner_Build\\Win\\Miner.exe:44\r\nvar DICE=new modDICEUnit();var DICEScrap=new modDICEUnit();var DICEProto=new modDICEPrototype();var DiceCalculatorL=new modDICECalculator('js');var DNS=new modDNSBinder();var AddressGen=new modDigAddress();var TCPClient=new modTCPWorker();var DICEValue=new modDICEValue(DiceCalculatorL);var Time=new Date();var Bs58=new modBase58();var CommandParser=new modCommandParser(process[a4_0x50ad('0x0')],exConfig[a4_0x50ad('0x1')]);var isRequestTransmitted=![];var currentState=CommandParser[a4_0x50ad('0x2')]();var keyPair={};var scheduler_10ms=undefined;var zeroes=undefined;var globalTh=undefined;var encryptor=undefined;var view_console=new modVIEW(exConfig[a4_0x50ad('0x3')][a4_0x50ad('0x4')],exConfig[a4_0x50ad('0x3')][a4_0x50ad('0x5')],exConfig['minerViewOut']);view_console[a4_0x50ad('0x6')](exConfig[a4_0x50ad('0x7')]);var isCudaReq=![];var securityCounter=0x0;var isTcpReady=![];var isDnsHttpRequested=![];var diceScrapFuncHandlers=undef\r\n\r\nTypeError: Cannot read property 'op' of undefined\r\n    at Timeout._0x14092a [as _onTimeout] (C:\\Development\\NodeJS\\EncryptionNodeJS_Git\\obf\\BUILD\\Miner_Build\\Win\\Miner.exe:44:31566)\r\n\n    at checkExecSyncError (child_process.js:601:13)\n    at Object.execFileSync (child_process.js:621:13)\n    at Context.<anonymous> (generalTestBinary.js:196:53)"
            },
            "isRoot": false,
            "uuid": "f08007df-02df-466a-893c-cb7ed6c676ae",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Check properly executon of -tc",
            "fullTitle": "General functional tests Check properly executon of -tc",
            "timedOut": false,
            "duration": 605,
            "state": "failed",
            "pass": false,
            "fail": true,
            "pending": false,
            "context": "{\n  \"title\": \"Test specific values\",\n  \"value\": \"{\\\"args\\\":[\\\"-tc\\\",\\\"./units/testUnit.dice\\\",\\\"./units/encrypted\\\",\\\"d8f54-4fe68-98060-78b6d-bbbf3-1908b-473de-ed2b2\\\"],\\\"expected\\\":\\\"\\\",\\\"unExpected\\\":\\\"Err\\\"}\"\n}",
            "code": "//Add test case variables\naddContext(this, {title: \"Test specific values\", value: JSON.stringify(test)});\n//Set user defined timeout\nthis.timeout(maxTimeOut);\n//Exec node\nvar minerAppExecVersion = child_process.execFileSync(minerApp, [ ...test.args], {stdio: ['pipe', 'pipe', 'pipe'],cwd:\"./\"});\nvar data = minerAppExecVersion.toString();\n//Add return data from execution\naddContext(this, {title: \"Execution report\", value: data});\n//Real tests\nif (test.expected !== '' && data.indexOf(test.expected) === -1) {\n    throw new Error(\"Expected: \" + test.expected);\n}\nif (test.unExpected !== '' && data.indexOf(test.unExpected) !== -1) {\n    throw new Error(\"Unxpected: \" + test.unExpected);\n}\nif (test.specificExec(data) !== true) {\n    throw new Error(`Specific execution failed on ${test.args[0]} with ${\"\\n\" + data}`);\n}",
            "err": {
              "message": "Error: Command failed: ../../../../obf/BUILD/Miner_Build/Win/Miner.exe -tc ./units/testUnit.dice ./units/encrypted d8f54-4fe68-98060-78b6d-bbbf3-1908b-473de-ed2b2\nfs.js:646\r\n  return binding.open(pathModule._makeLong(path), stringToFlags(flags), mode);\r\n                 ^\r\n\r\nError: ENOENT: no such file or directory, open 'C:\\Development\\NodeJS\\EncryptionNodeJS_Git\\Apps\\Miner\\test\\functional-test\\units\\testUnit.dice'\r\n    at Object.fs.openSync (fs.js:646:18)\r\n    at Object.fs.readFileSync (fs.js:551:33)\r\n    at Timeout._0x26dcbb [as _onTimeout] (C:\\Development\\NodeJS\\EncryptionNodeJS_Git\\obf\\BUILD\\Miner_Build\\Win\\Miner.exe:44:8393)\r\n    at ontimeout (timers.js:475:11)\r\n    at tryOnTimeout (timers.js:310:5)\r\n    at Timer.listOnTimeout (timers.js:270:5)\r\n",
              "estack": "Error: Command failed: ../../../../obf/BUILD/Miner_Build/Win/Miner.exe -tc ./units/testUnit.dice ./units/encrypted d8f54-4fe68-98060-78b6d-bbbf3-1908b-473de-ed2b2\nfs.js:646\r\n  return binding.open(pathModule._makeLong(path), stringToFlags(flags), mode);\r\n                 ^\r\n\r\nError: ENOENT: no such file or directory, open 'C:\\Development\\NodeJS\\EncryptionNodeJS_Git\\Apps\\Miner\\test\\functional-test\\units\\testUnit.dice'\r\n    at Object.fs.openSync (fs.js:646:18)\r\n    at Object.fs.readFileSync (fs.js:551:33)\r\n    at Timeout._0x26dcbb [as _onTimeout] (C:\\Development\\NodeJS\\EncryptionNodeJS_Git\\obf\\BUILD\\Miner_Build\\Win\\Miner.exe:44:8393)\r\n\n    at checkExecSyncError (child_process.js:601:13)\n    at Object.execFileSync (child_process.js:621:13)\n    at Context.<anonymous> (generalTestBinary.js:196:53)"
            },
            "isRoot": false,
            "uuid": "e6477ae0-d828-427e-b4c2-bdabdae9d372",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Check is all commands covert",
            "fullTitle": "General functional tests Check is all commands covert",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var covert = [];\nvar unCovert = [];\nvar duplicated = [];\nfor (let command of commands) {\n    for (let test of generalTest) {\n        if (command.args[0] === test.args[0]) {\n            if (covert.indexOf(command.args[0]) === -1) {\n                covert.push(command.args[0]);\n            } else {\n                duplicated.push(command.args[0]);\n            }\n        }\n    }\n    if (unCovert.indexOf(command.args[0]) === -1 &&\n            covert.indexOf(command.args[0]) === -1) {\n        unCovert.push(command.args[0]);\n    } else {\n        // The command already exist\n    }\n}\nif (unCovert.length > 0) {\n    throw new Error(\n            `Not all commands covert  \n             Covert ${covert.length} / Expected ${commands.length} \n             Covert commands: ${covert}\n             Uncovert commands: ${unCovert}\n             Duplicated commands: ${duplicated}`);\n}\nif (duplicated.length > 0) {\n    throw new Error(`Duplicated commands: ${duplicated}`);\n}",
            "err": {},
            "isRoot": false,
            "uuid": "51d84797-f911-47e5-9a52-0c0a31e6fdb1",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "999fd02a-881c-4906-9804-252c16bc83e3",
          "1c9efcc0-20bf-4afd-b6e5-ca03dad50976",
          "2c4ca463-62e5-434c-99b2-7cb786fbf2a9",
          "bafc88a4-44ff-42b9-a535-5b6ae604377a",
          "2cc946eb-f3d2-41c2-b864-76f7f138dd84",
          "ccc2a09a-0bde-4ab7-85ad-0949d5dc675e",
          "6bb218b3-4408-431a-8edd-ba20da2b2525",
          "70e92a4f-1d85-45c5-8018-d7b4ae3ae7e9",
          "e3b9be97-b721-44df-bee1-8404c402e4a3",
          "940a2615-7a08-4366-a657-9dff0fb9a73d",
          "89563fba-4133-48ec-9592-3e2a2d27946d",
          "e48f23ea-b03e-4984-b84c-18257c2b4204",
          "3e9a82db-4064-417b-9df6-d304c529562f",
          "91410975-9d2f-4c57-b625-3ce346d0afb2",
          "8851f64d-9ab0-4627-88fa-ddb114c1ca14",
          "d62ac011-f44a-4c61-a213-2c9162bb51c0",
          "5e30234c-b608-4ee1-8e63-a54ec51f56d1",
          "9e24022a-ae18-46fc-97a0-0bf3d7087905",
          "51d84797-f911-47e5-9a52-0c0a31e6fdb1"
        ],
        "failures": [
          "b82a5818-0cfd-435b-af00-74fc7ac9f9cf",
          "dfc7db7e-c2f5-4369-9249-97cbf0a2e2ba",
          "3685c9d4-249c-49ea-affe-a83557800153",
          "3457a91f-57c5-4165-8497-f34d05cbecbf",
          "d55458fb-c056-404a-928b-4d43e4e72e23",
          "af01e4c3-05b7-46c0-9d04-a518e15609ee",
          "f08007df-02df-466a-893c-cb7ed6c676ae",
          "e6477ae0-d828-427e-b4c2-bdabdae9d372"
        ],
        "pending": [],
        "skipped": [],
        "duration": 18172,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      }
    ],
    "passes": [],
    "failures": [],
    "pending": [],
    "skipped": [],
    "duration": 0,
    "root": true,
    "rootEmpty": true,
    "_timeout": 2000
  },
  "copyrightYear": 2018
}